

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Oct 04 04:03:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 18/08/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001B                     	;# 
   109     001C                     	;# 
   110     001D                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     0081                     	;# 
   114     0085                     	;# 
   115     0086                     	;# 
   116     0087                     	;# 
   117     0088                     	;# 
   118     0089                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     010C                     	;# 
   193     010D                     	;# 
   194     010E                     	;# 
   195     010F                     	;# 
   196     018C                     	;# 
   197     018D                     	;# 
   198     0000                     	;# 
   199     0001                     	;# 
   200     0002                     	;# 
   201     0003                     	;# 
   202     0004                     	;# 
   203     0005                     	;# 
   204     0006                     	;# 
   205     0007                     	;# 
   206     0008                     	;# 
   207     0009                     	;# 
   208     000A                     	;# 
   209     000B                     	;# 
   210     000C                     	;# 
   211     000D                     	;# 
   212     000E                     	;# 
   213     000E                     	;# 
   214     000F                     	;# 
   215     0010                     	;# 
   216     0011                     	;# 
   217     0012                     	;# 
   218     0013                     	;# 
   219     0014                     	;# 
   220     0015                     	;# 
   221     0015                     	;# 
   222     0016                     	;# 
   223     0017                     	;# 
   224     0018                     	;# 
   225     0019                     	;# 
   226     001A                     	;# 
   227     001B                     	;# 
   228     001B                     	;# 
   229     001C                     	;# 
   230     001D                     	;# 
   231     001E                     	;# 
   232     001F                     	;# 
   233     0081                     	;# 
   234     0085                     	;# 
   235     0086                     	;# 
   236     0087                     	;# 
   237     0088                     	;# 
   238     0089                     	;# 
   239     008C                     	;# 
   240     008D                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0094                     	;# 
   246     0098                     	;# 
   247     0099                     	;# 
   248     009C                     	;# 
   249     009D                     	;# 
   250     009E                     	;# 
   251     009F                     	;# 
   252     010C                     	;# 
   253     010D                     	;# 
   254     010E                     	;# 
   255     010F                     	;# 
   256     018C                     	;# 
   257     018D                     	;# 
   258     0000                     	;# 
   259     0001                     	;# 
   260     0002                     	;# 
   261     0003                     	;# 
   262     0004                     	;# 
   263     0005                     	;# 
   264     0006                     	;# 
   265     0007                     	;# 
   266     0008                     	;# 
   267     0009                     	;# 
   268     000A                     	;# 
   269     000B                     	;# 
   270     000C                     	;# 
   271     000D                     	;# 
   272     000E                     	;# 
   273     000E                     	;# 
   274     000F                     	;# 
   275     0010                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0014                     	;# 
   280     0015                     	;# 
   281     0015                     	;# 
   282     0016                     	;# 
   283     0017                     	;# 
   284     0018                     	;# 
   285     0019                     	;# 
   286     001A                     	;# 
   287     001B                     	;# 
   288     001B                     	;# 
   289     001C                     	;# 
   290     001D                     	;# 
   291     001E                     	;# 
   292     001F                     	;# 
   293     0081                     	;# 
   294     0085                     	;# 
   295     0086                     	;# 
   296     0087                     	;# 
   297     0088                     	;# 
   298     0089                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     008E                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0098                     	;# 
   307     0099                     	;# 
   308     009C                     	;# 
   309     009D                     	;# 
   310     009E                     	;# 
   311     009F                     	;# 
   312     010C                     	;# 
   313     010D                     	;# 
   314     010E                     	;# 
   315     010F                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     0091                     	;# 
   363     0092                     	;# 
   364     0093                     	;# 
   365     0094                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     010C                     	;# 
   373     010D                     	;# 
   374     010E                     	;# 
   375     010F                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     0091                     	;# 
   423     0092                     	;# 
   424     0093                     	;# 
   425     0094                     	;# 
   426     0098                     	;# 
   427     0099                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     009F                     	;# 
   432     010C                     	;# 
   433     010D                     	;# 
   434     010E                     	;# 
   435     010F                     	;# 
   436     018C                     	;# 
   437     018D                     	;# 
   438                           
   439                           	psect	idataBANK0
   440     0293                     __pidataBANK0:
   441                           
   442                           ;initializer for _characters
   443     0293  3431               	retlw	49
   444     0294  3400               	retlw	0
   445     0295  3400               	retlw	0
   446     0296  3400               	retlw	0
   447     0297  3434               	retlw	52
   448     0298  3400               	retlw	0
   449     0299  3400               	retlw	0
   450     029A  3400               	retlw	0
   451     029B  3437               	retlw	55
   452     029C  3400               	retlw	0
   453     029D  3400               	retlw	0
   454     029E  3400               	retlw	0
   455     029F  342A               	retlw	42
   456     02A0  3400               	retlw	0
   457     02A1  3400               	retlw	0
   458     02A2  3400               	retlw	0
   459     001A                     _RCREG	set	26
   460     0019                     _TXREG	set	25
   461     0006                     _PORTB	set	6
   462     0065                     _RCIF	set	101
   463     00C1                     _OERR	set	193
   464     0064                     _TXIF	set	100
   465     00C6                     _RX9	set	198
   466     00C4                     _CREN	set	196
   467     00C7                     _SPEN	set	199
   468     0045                     _RD5	set	69
   469     0043                     _RD3	set	67
   470     0041                     _RD1	set	65
   471     003F                     _RC7	set	63
   472     003D                     _RC5	set	61
   473     0033                     _RB3	set	51
   474     0032                     _RB2	set	50
   475     0031                     _RB1	set	49
   476     0030                     _RB0	set	48
   477     0037                     _RB7	set	55
   478     0036                     _RB6	set	54
   479     0035                     _RB5	set	53
   480     0034                     _RB4	set	52
   481     0099                     _SPBRG	set	153
   482     0086                     _TRISB	set	134
   483     0088                     _TRISD	set	136
   484     04C6                     _TX9	set	1222
   485     04C5                     _TXEN	set	1221
   486     04C4                     _SYNC	set	1220
   487     04C2                     _BRGH	set	1218
   488     043F                     _TRISC7	set	1087
   489     043E                     _TRISC6	set	1086
   490                           
   491                           	psect	strings
   492     0003                     __pstrings:
   493     0003                     stringtab:
   494     0003                     __stringtab:
   495                           
   496                           ;	String table - string pointers are 1 byte each
   497     0003  1BFF               	btfsc	btemp+1,7
   498     0004  280D               	ljmp	stringcode
   499     0005  1383               	bcf	3,7
   500     0006  187F               	btfsc	btemp+1,0
   501     0007  1783               	bsf	3,7
   502     0008  0800               	movf	0,w
   503     0009  0A84               	incf	4,f
   504     000A  1903               	skipnz
   505     000B  0AFF               	incf	btemp+1,f
   506     000C  0008               	return
   507     000D                     stringcode:
   508     000D                     stringdir:
   509     000D  3000               	movlw	high stringdir
   510     000E  008A               	movwf	10
   511     000F  0804               	movf	4,w
   512     0010  0A84               	incf	4,f
   513     0011  0782               	addwf	2,f
   514     0012                     __stringbase:
   515     0012  3400               	retlw	0
   516     0013                     __end_of__stringtab:
   517     0013                     STR_2:
   518     0013  3453               	retlw	83	;'S'
   519     0014  3465               	retlw	101	;'e'
   520     0015  3474               	retlw	116	;'t'
   521     0016  3474               	retlw	116	;'t'
   522     0017  3469               	retlw	105	;'i'
   523     0018  346E               	retlw	110	;'n'
   524     0019  3467               	retlw	103	;'g'
   525     001A  3473               	retlw	115	;'s'
   526     001B  340A               	retlw	10
   527     001C  3453               	retlw	83	;'S'
   528     001D  3461               	retlw	97	;'a'
   529     001E  3476               	retlw	118	;'v'
   530     001F  3465               	retlw	101	;'e'
   531     0020  3420               	retlw	32	;' '
   532     0021  3470               	retlw	112	;'p'
   533     0022  3468               	retlw	104	;'h'
   534     0023  346F               	retlw	111	;'o'
   535     0024  346E               	retlw	110	;'n'
   536     0025  3465               	retlw	101	;'e'
   537     0026  3420               	retlw	32	;' '
   538     0027  346E               	retlw	110	;'n'
   539     0028  3475               	retlw	117	;'u'
   540     0029  346D               	retlw	109	;'m'
   541     002A  3462               	retlw	98	;'b'
   542     002B  3465               	retlw	101	;'e'
   543     002C  3472               	retlw	114	;'r'
   544     002D  3428               	retlw	40	;'('
   545     002E  3431               	retlw	49	;'1'
   546     002F  3429               	retlw	41	;')'
   547     0030  3420               	retlw	32	;' '
   548     0031  3452               	retlw	82	;'R'
   549     0032  3465               	retlw	101	;'e'
   550     0033  3461               	retlw	97	;'a'
   551     0034  3464               	retlw	100	;'d'
   552     0035  3420               	retlw	32	;' '
   553     0036  3473               	retlw	115	;'s'
   554     0037  3461               	retlw	97	;'a'
   555     0038  3476               	retlw	118	;'v'
   556     0039  3465               	retlw	101	;'e'
   557     003A  3464               	retlw	100	;'d'
   558     003B  3420               	retlw	32	;' '
   559     003C  346E               	retlw	110	;'n'
   560     003D  3475               	retlw	117	;'u'
   561     003E  346D               	retlw	109	;'m'
   562     003F  3462               	retlw	98	;'b'
   563     0040  3465               	retlw	101	;'e'
   564     0041  3472               	retlw	114	;'r'
   565     0042  3428               	retlw	40	;'('
   566     0043  3432               	retlw	50	;'2'
   567     0044  3429               	retlw	41	;')'
   568     0045  3400               	retlw	0
   569     0046                     STR_11:
   570     0046  3447               	retlw	71	;'G'
   571     0047  3453               	retlw	83	;'S'
   572     0048  344D               	retlw	77	;'M'
   573     0049  3420               	retlw	32	;' '
   574     004A  3441               	retlw	65	;'A'
   575     004B  344C               	retlw	76	;'L'
   576     004C  3441               	retlw	65	;'A'
   577     004D  3452               	retlw	82	;'R'
   578     004E  344D               	retlw	77	;'M'
   579     004F  340A               	retlw	10
   580     0050  3420               	retlw	32	;' '
   581     0051  3453               	retlw	83	;'S'
   582     0052  3474               	retlw	116	;'t'
   583     0053  3461               	retlw	97	;'a'
   584     0054  3472               	retlw	114	;'r'
   585     0055  3474               	retlw	116	;'t'
   586     0056  3420               	retlw	32	;' '
   587     0057  3428               	retlw	40	;'('
   588     0058  3431               	retlw	49	;'1'
   589     0059  3429               	retlw	41	;')'
   590     005A  3420               	retlw	32	;' '
   591     005B  3453               	retlw	83	;'S'
   592     005C  346C               	retlw	108	;'l'
   593     005D  3465               	retlw	101	;'e'
   594     005E  3465               	retlw	101	;'e'
   595     005F  3470               	retlw	112	;'p'
   596     0060  3428               	retlw	40	;'('
   597     0061  3432               	retlw	50	;'2'
   598     0062  3429               	retlw	41	;')'
   599     0063  3420               	retlw	32	;' '
   600     0064  3453               	retlw	83	;'S'
   601     0065  3465               	retlw	101	;'e'
   602     0066  3474               	retlw	116	;'t'
   603     0067  3474               	retlw	116	;'t'
   604     0068  3469               	retlw	105	;'i'
   605     0069  346E               	retlw	110	;'n'
   606     006A  3467               	retlw	103	;'g'
   607     006B  3473               	retlw	115	;'s'
   608     006C  3428               	retlw	40	;'('
   609     006D  3433               	retlw	51	;'3'
   610     006E  3429               	retlw	41	;')'
   611     006F  3400               	retlw	0
   612     0070                     STR_4:
   613     0070  3450               	retlw	80	;'P'
   614     0071  3468               	retlw	104	;'h'
   615     0072  346F               	retlw	111	;'o'
   616     0073  346E               	retlw	110	;'n'
   617     0074  3465               	retlw	101	;'e'
   618     0075  3420               	retlw	32	;' '
   619     0076  3473               	retlw	115	;'s'
   620     0077  3461               	retlw	97	;'a'
   621     0078  3476               	retlw	118	;'v'
   622     0079  3465               	retlw	101	;'e'
   623     007A  3464               	retlw	100	;'d'
   624     007B  3420               	retlw	32	;' '
   625     007C  3473               	retlw	115	;'s'
   626     007D  3475               	retlw	117	;'u'
   627     007E  3463               	retlw	99	;'c'
   628     007F  3463               	retlw	99	;'c'
   629     0080  3465               	retlw	101	;'e'
   630     0081  3473               	retlw	115	;'s'
   631     0082  3473               	retlw	115	;'s'
   632     0083  3466               	retlw	102	;'f'
   633     0084  3475               	retlw	117	;'u'
   634     0085  346C               	retlw	108	;'l'
   635     0086  346C               	retlw	108	;'l'
   636     0087  3479               	retlw	121	;'y'
   637     0088  3400               	retlw	0
   638     0089                     STR_7:
   639     0089  3445               	retlw	69	;'E'
   640     008A  3472               	retlw	114	;'r'
   641     008B  3472               	retlw	114	;'r'
   642     008C  346F               	retlw	111	;'o'
   643     008D  3472               	retlw	114	;'r'
   644     008E  3420               	retlw	32	;' '
   645     008F  3472               	retlw	114	;'r'
   646     0090  3465               	retlw	101	;'e'
   647     0091  3461               	retlw	97	;'a'
   648     0092  3464               	retlw	100	;'d'
   649     0093  3469               	retlw	105	;'i'
   650     0094  346E               	retlw	110	;'n'
   651     0095  3467               	retlw	103	;'g'
   652     0096  3420               	retlw	32	;' '
   653     0097  346E               	retlw	110	;'n'
   654     0098  3475               	retlw	117	;'u'
   655     0099  346D               	retlw	109	;'m'
   656     009A  3462               	retlw	98	;'b'
   657     009B  3465               	retlw	101	;'e'
   658     009C  3472               	retlw	114	;'r'
   659     009D  3400               	retlw	0
   660     009E                     STR_10:
   661     009E  3453               	retlw	83	;'S'
   662     009F  3461               	retlw	97	;'a'
   663     00A0  3476               	retlw	118	;'v'
   664     00A1  3465               	retlw	101	;'e'
   665     00A2  3464               	retlw	100	;'d'
   666     00A3  3420               	retlw	32	;' '
   667     00A4  3470               	retlw	112	;'p'
   668     00A5  3468               	retlw	104	;'h'
   669     00A6  346F               	retlw	111	;'o'
   670     00A7  346E               	retlw	110	;'n'
   671     00A8  3465               	retlw	101	;'e'
   672     00A9  3420               	retlw	32	;' '
   673     00AA  346E               	retlw	110	;'n'
   674     00AB  3475               	retlw	117	;'u'
   675     00AC  346D               	retlw	109	;'m'
   676     00AD  3462               	retlw	98	;'b'
   677     00AE  3465               	retlw	101	;'e'
   678     00AF  3472               	retlw	114	;'r'
   679     00B0  340A               	retlw	10
   680     00B1  3400               	retlw	0
   681     00B2                     STR_5:
   682     00B2  3445               	retlw	69	;'E'
   683     00B3  3472               	retlw	114	;'r'
   684     00B4  3472               	retlw	114	;'r'
   685     00B5  346F               	retlw	111	;'o'
   686     00B6  3472               	retlw	114	;'r'
   687     00B7  3420               	retlw	32	;' '
   688     00B8  3473               	retlw	115	;'s'
   689     00B9  3461               	retlw	97	;'a'
   690     00BA  3476               	retlw	118	;'v'
   691     00BB  3469               	retlw	105	;'i'
   692     00BC  346E               	retlw	110	;'n'
   693     00BD  3467               	retlw	103	;'g'
   694     00BE  3420               	retlw	32	;' '
   695     00BF  3470               	retlw	112	;'p'
   696     00C0  3468               	retlw	104	;'h'
   697     00C1  346F               	retlw	111	;'o'
   698     00C2  346E               	retlw	110	;'n'
   699     00C3  3465               	retlw	101	;'e'
   700     00C4  3400               	retlw	0
   701     00C5                     STR_1:
   702     00C5  3441               	retlw	65	;'A'
   703     00C6  3454               	retlw	84	;'T'
   704     00C7  3444               	retlw	68	;'D'
   705     00C8  3436               	retlw	54	;'6'
   706     00C9  3439               	retlw	57	;'9'
   707     00CA  3438               	retlw	56	;'8'
   708     00CB  3436               	retlw	54	;'6'
   709     00CC  3439               	retlw	57	;'9'
   710     00CD  3435               	retlw	53	;'5'
   711     00CE  3431               	retlw	49	;'1'
   712     00CF  3433               	retlw	51	;'3'
   713     00D0  3430               	retlw	48	;'0'
   714     00D1  3439               	retlw	57	;'9'
   715     00D2  343B               	retlw	59	;';'
   716     00D3  340D               	retlw	13
   717     00D4  340A               	retlw	10
   718     00D5  3400               	retlw	0
   719     00D6                     STR_3:
   720     00D6  3445               	retlw	69	;'E'
   721     00D7  346E               	retlw	110	;'n'
   722     00D8  3474               	retlw	116	;'t'
   723     00D9  3465               	retlw	101	;'e'
   724     00DA  3472               	retlw	114	;'r'
   725     00DB  3420               	retlw	32	;' '
   726     00DC  3479               	retlw	121	;'y'
   727     00DD  346F               	retlw	111	;'o'
   728     00DE  3475               	retlw	117	;'u'
   729     00DF  3472               	retlw	114	;'r'
   730     00E0  3420               	retlw	32	;' '
   731     00E1  3470               	retlw	112	;'p'
   732     00E2  3468               	retlw	104	;'h'
   733     00E3  346F               	retlw	111	;'o'
   734     00E4  346E               	retlw	110	;'n'
   735     00E5  3465               	retlw	101	;'e'
   736     00E6  3400               	retlw	0
   737     00E7                     STR_9:
   738     00E7  344E               	retlw	78	;'N'
   739     00E8  346F               	retlw	111	;'o'
   740     00E9  3420               	retlw	32	;' '
   741     00EA  346E               	retlw	110	;'n'
   742     00EB  3475               	retlw	117	;'u'
   743     00EC  346D               	retlw	109	;'m'
   744     00ED  3462               	retlw	98	;'b'
   745     00EE  3465               	retlw	101	;'e'
   746     00EF  3472               	retlw	114	;'r'
   747     00F0  3420               	retlw	32	;' '
   748     00F1  3473               	retlw	115	;'s'
   749     00F2  3461               	retlw	97	;'a'
   750     00F3  3476               	retlw	118	;'v'
   751     00F4  3465               	retlw	101	;'e'
   752     00F5  3464               	retlw	100	;'d'
   753     00F6  3400               	retlw	0
   754     00F7                     STR_6:
   755     00F7  3465               	retlw	101	;'e'
   756     00F8  3472               	retlw	114	;'r'
   757     00F9  3472               	retlw	114	;'r'
   758     00FA  3400               	retlw	0
   759     00D5                     
   760                           	psect	cinit
   761     07E1                     start_initialization:	
   762                           ; #config settings
   763                           
   764     07E1                     __initialization:
   765                           
   766                           ; Initialize objects allocated to BANK0
   767     07E1  1383               	bcf	3,7	;select IRP bank0
   768     07E2  304D               	movlw	low (__pdataBANK0+16)
   769     07E3  00FD               	movwf	btemp+-1
   770     07E4  3002               	movlw	high __pidataBANK0
   771     07E5  00FE               	movwf	btemp
   772     07E6  3093               	movlw	low __pidataBANK0
   773     07E7  00FF               	movwf	btemp+1
   774     07E8  303D               	movlw	low __pdataBANK0
   775     07E9  0084               	movwf	4
   776     07EA  120A  118A  22A7  120A  118A  	fcall	init_ram0
   777                           
   778                           ; Clear objects allocated to BANK0
   779     07EF  01CD               	clrf	__pbssBANK0& (0+127)
   780     07F0  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   781     07F1  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   782     07F2  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   783     07F3  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   784     07F4  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   785     07F5  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   786     07F6  01D4               	clrf	(__pbssBANK0+7)& (0+127)
   787     07F7  01D5               	clrf	(__pbssBANK0+8)& (0+127)
   788     07F8  01D6               	clrf	(__pbssBANK0+9)& (0+127)
   789     07F9  01D7               	clrf	(__pbssBANK0+10)& (0+127)
   790     07FA  01D8               	clrf	(__pbssBANK0+11)& (0+127)
   791     07FB  01D9               	clrf	(__pbssBANK0+12)& (0+127)
   792     07FC                     end_of_initialization:	
   793                           ;End of C runtime variable initialization code
   794                           
   795     07FC                     __end_of__initialization:
   796     07FC  0183               	clrf	3
   797     07FD  120A  118A  2A76   	ljmp	_main	;jump to C main() function
   798                           
   799                           	psect	bssBANK0
   800     004D                     __pbssBANK0:
   801     004D                     malloc@lock:
   802     004D                     	ds	4
   803     0051                     _brkp:
   804     0051                     	ds	2
   805     0053                     malloc@end:
   806     0053                     	ds	2
   807     0055                     malloc@cur:
   808     0055                     	ds	2
   809     0057                     _errno:
   810     0057                     	ds	2
   811     0059                     ___freelist:
   812     0059                     	ds	1
   813                           
   814                           	psect	dataBANK0
   815     003D                     __pdataBANK0:
   816     003D                     _characters:
   817     003D                     	ds	16
   818                           
   819                           	psect	inittext
   820     02A3                     init_fetch0:	
   821                           ;	Called with low address in FSR and high address in W
   822                           
   823     02A3  087E               	movf	btemp,w
   824     02A4  008A               	movwf	10
   825     02A5  087F               	movf	btemp+1,w
   826     02A6  0082               	movwf	2
   827     02A7                     init_ram0:	
   828                           ;Called with:
   829                           ;	high address of idata address in btemp 
   830                           ;	low address of idata address in btemp+1 
   831                           ;	low address of data in FSR
   832                           ;	high address + 1 of data in btemp-1
   833                           
   834     02A7  120A  118A  22A3  120A  118A  	fcall	init_fetch0
   835     02AC  0080               	movwf	0
   836     02AD  0A84               	incf	4,f
   837     02AE  0804               	movf	4,w
   838     02AF  067D               	xorwf	btemp+-1,w
   839     02B0  1903               	btfsc	3,2
   840     02B1  3400               	retlw	0
   841     02B2  0AFF               	incf	btemp+1,f
   842     02B3  1903               	btfsc	3,2
   843     02B4  0AFE               	incf	btemp,f
   844     02B5  2AA7               	goto	init_ram0
   845                           
   846                           	psect	cstackCOMMON
   847     0070                     __pcstackCOMMON:
   848     0070                     ?_LCD_write_char:
   849     0070                     ??_LCD_write_char:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_boot:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_main_menu:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?__SIM900A_print:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_initialize_SIM900A:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ??_initialize_SIM900A:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?___simple_search_fl:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ??___expand_heap:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_read_keypad_pins:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ??_read_keypad_pins:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_read_keypad_char:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?_BlinkMainLED:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ??_BlinkMainLED:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?_blink_sensor_led:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ?_sensor_leds_off:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ??_sensor_leds_off:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_boot_led_blink:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ??_boot_led_blink:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_MakeCall:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     ?_start:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ?_sleep:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ??_sleep:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_settings:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_init_trisio:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ??_init_trisio:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?__SIM900A_putch:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ??__SIM900A_putch:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?_strlen:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_strcpy:	
   934                           ; 2 bytes @ 0x0
   935                           
   936     0070                     ?_read_saved_phone:	
   937                           ; 2 bytes @ 0x0
   938                           
   939     0070                     ?___expand_heap:	
   940                           ; 2 bytes @ 0x0
   941                           
   942     0070                     ?_main:	
   943                           ; 2 bytes @ 0x0
   944                           
   945     0070                     ?_save_phone:	
   946                           ; 2 bytes @ 0x0
   947                           
   948     0070                     __SIM900A_putch@bt:	
   949                           ; 2 bytes @ 0x0
   950                           
   951     0070                     ___expand_heap@pn:	
   952                           ; 1 bytes @ 0x0
   953                           
   954     0070                     blink_sensor_led@sensor:	
   955                           ; 1 bytes @ 0x0
   956                           
   957     0070                     save_phone@phone:	
   958                           ; 2 bytes @ 0x0
   959                           
   960     0070                     ___simple_search_fl@n:	
   961                           ; 2 bytes @ 0x0
   962                           
   963     0070                     strcpy@dest:	
   964                           ; 2 bytes @ 0x0
   965                           
   966                           
   967                           ; 2 bytes @ 0x0
   968     0070                     	ds	1
   969     0071                     ??__SIM900A_print:
   970     0071                     ??_read_saved_phone:	
   971                           ; 1 bytes @ 0x1
   972                           
   973     0071                     read_saved_phone@phone:	
   974                           ; 1 bytes @ 0x1
   975                           
   976     0071                     __SIM900A_print@ptr:	
   977                           ; 1 bytes @ 0x1
   978                           
   979     0071                     ___expand_heap@n:	
   980                           ; 1 bytes @ 0x1
   981                           
   982                           
   983                           ; 2 bytes @ 0x1
   984     0071                     	ds	1
   985     0072                     ??_strlen:
   986     0072                     ??___simple_search_fl:	
   987                           ; 1 bytes @ 0x2
   988                           
   989     0072                     ??_blink_sensor_led:	
   990                           ; 1 bytes @ 0x2
   991                           
   992     0072                     ??_save_phone:	
   993                           ; 1 bytes @ 0x2
   994                           
   995     0072                     LCD_write_char@ch:	
   996                           ; 1 bytes @ 0x2
   997                           
   998     0072                     strcpy@src:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001     0072                     strlen@a:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x2
  1006     0072                     	ds	1
  1007     0073                     ??_boot:
  1008     0073                     ??_strcpy:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011     0073                     ??_MakeCall:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014     0073                     strlen@s:	
  1015                           ; 1 bytes @ 0x3
  1016                           
  1017     0073                     read_keypad_pins@ROW:	
  1018                           ; 1 bytes @ 0x3
  1019                           
  1020     0073                     ___expand_heap@new_brkp:	
  1021                           ; 2 bytes @ 0x3
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x3
  1025     0073                     	ds	2
  1026     0075                     ??_start:
  1027     0075                     read_keypad_pins@COL:	
  1028                           ; 1 bytes @ 0x5
  1029                           
  1030     0075                     strcpy@d:	
  1031                           ; 2 bytes @ 0x5
  1032                           
  1033                           
  1034                           ; 2 bytes @ 0x5
  1035     0075                     	ds	1
  1036     0076                     ___simple_search_fl@remaining_size:
  1037                           
  1038                           ; 2 bytes @ 0x6
  1039     0076                     	ds	1
  1040     0077                     ??_read_keypad_char:
  1041     0077                     read_keypad_char@ch:	
  1042                           ; 1 bytes @ 0x7
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x7
  1046     0077                     	ds	1
  1047     0078                     ?_read_keypad:
  1048     0078                     ___simple_search_fl@best_last:	
  1049                           ; 2 bytes @ 0x8
  1050                           
  1051     0078                     read_keypad@mode:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x8
  1056     0078                     	ds	1
  1057     0079                     ___simple_search_fl@split:
  1058                           
  1059                           ; 1 bytes @ 0x9
  1060     0079                     	ds	1
  1061     007A                     ??_read_keypad:
  1062     007A                     ___simple_search_fl@last:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067     007A                     	ds	1
  1068     007B                     ___simple_search_fl@next:
  1069                           
  1070                           ; 1 bytes @ 0xB
  1071     007B                     	ds	1
  1072     007C                     ___simple_search_fl@c:
  1073     007C                     read_keypad@buffer:	
  1074                           ; 1 bytes @ 0xC
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0xC
  1078     007C                     	ds	1
  1079     007D                     ___simple_search_fl@best:
  1080                           
  1081                           ; 1 bytes @ 0xD
  1082     007D                     	ds	1
  1083     007E                     ??_main_menu:
  1084     007E                     ??_LCD_Write_String:	
  1085                           ; 1 bytes @ 0xE
  1086                           
  1087     007E                     ??_main:	
  1088                           ; 1 bytes @ 0xE
  1089                           
  1090     007E                     ??_settings:	
  1091                           ; 1 bytes @ 0xE
  1092                           
  1093                           
  1094                           	psect	cstackBANK0
  1095     0020                     __pcstackBANK0:	
  1096                           ; 1 bytes @ 0xE
  1097                           
  1098     0020                     ?_malloc:
  1099     0020                     malloc@n:	
  1100                           ; 2 bytes @ 0x0
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x0
  1104     0020                     	ds	2
  1105     0022                     ??_malloc:
  1106                           
  1107                           ; 1 bytes @ 0x2
  1108     0022                     	ds	2
  1109     0024                     malloc@m:
  1110                           
  1111                           ; 2 bytes @ 0x4
  1112     0024                     	ds	2
  1113     0026                     malloc@sz:
  1114                           
  1115                           ; 2 bytes @ 0x6
  1116     0026                     	ds	2
  1117     0028                     malloc@size:
  1118                           
  1119                           ; 2 bytes @ 0x8
  1120     0028                     	ds	2
  1121     002A                     malloc@p:
  1122                           
  1123                           ; 2 bytes @ 0xA
  1124     002A                     	ds	2
  1125     002C                     malloc@new:
  1126                           
  1127                           ; 2 bytes @ 0xC
  1128     002C                     	ds	2
  1129     002E                     ?_concatenate:
  1130     002E                     concatenate@s2:	
  1131                           ; 2 bytes @ 0xE
  1132                           
  1133                           
  1134                           ; 1 bytes @ 0xE
  1135     002E                     	ds	1
  1136     002F                     ??_concatenate:
  1137                           
  1138                           ; 1 bytes @ 0xF
  1139     002F                     	ds	4
  1140     0033                     concatenate@s1:
  1141                           
  1142                           ; 1 bytes @ 0x13
  1143     0033                     	ds	1
  1144     0034                     concatenate@result:
  1145                           
  1146                           ; 2 bytes @ 0x14
  1147     0034                     	ds	2
  1148     0036                     ?_LCD_Write_String:
  1149     0036                     LCD_Write_String@Str:	
  1150                           ; 1 bytes @ 0x16
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x16
  1154     0036                     	ds	2
  1155     0038                     LCD_Write_String@i:
  1156                           
  1157                           ; 2 bytes @ 0x18
  1158     0038                     	ds	2
  1159     003A                     settings@phone:
  1160                           
  1161                           ; 2 bytes @ 0x1A
  1162     003A                     	ds	2
  1163     003C                     settings@saved_number:
  1164                           
  1165                           ; 1 bytes @ 0x1C
  1166     003C                     	ds	1
  1167                           
  1168                           	psect	maintext
  1169     0276                     __pmaintext:	
  1170 ;;
  1171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1172 ;;
  1173 ;; *************** function _main *****************
  1174 ;; Defined at:
  1175 ;;		line 7 in file "main.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2  100[None  ] int 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : B00/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels required when called: 5
  1195 ;; This function calls:
  1196 ;;		_boot
  1197 ;;		_main_menu
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203     0276                     _main:	
  1204                           ;psect for function _main
  1205                           
  1206     0276                     l1647:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1209                           
  1210                           
  1211                           ;main.c: 9:    boot();
  1212     0276  120A  118A  2283  120A  118A  	fcall	_boot
  1213     027B                     l1649:
  1214                           
  1215                           ;main.c: 11:    main_menu();
  1216     027B  120A  118A  23F3  120A  118A  	fcall	_main_menu
  1217     0280                     l101:
  1218     0280  120A  118A  2800   	ljmp	start
  1219     0283                     __end_of_main:
  1220                           
  1221                           	psect	text1
  1222     03F3                     __ptext1:	
  1223 ;; *************** function _main_menu *****************
  1224 ;; Defined at:
  1225 ;;		line 156 in file "firmware.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 4
  1246 ;; This function calls:
  1247 ;;		_LCD_Write_String
  1248 ;;		_read_keypad
  1249 ;;		_settings
  1250 ;;		_sleep
  1251 ;;		_start
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257     03F3                     _main_menu:	
  1258                           ;psect for function _main_menu
  1259                           
  1260     03F3                     l1633:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _main_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1263                           
  1264                           
  1265                           ;firmware.c: 158:     LCD_Write_String("GSM ALARM\n Start (1) Sleep(2) Settings(3)");
  1266     03F3  3034               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1267     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1268     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1269     03F6  00B6               	movwf	LCD_Write_String@Str
  1270     03F7  3080               	movlw	128
  1271     03F8  00B7               	movwf	LCD_Write_String@Str+1
  1272     03F9  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  1273     03FE                     l1635:
  1274                           
  1275                           ;firmware.c: 160:     if (read_keypad(1) == 1)
  1276     03FE  3001               	movlw	1
  1277     03FF  00F8               	movwf	read_keypad@mode
  1278     0400  3000               	movlw	0
  1279     0401  00F9               	movwf	read_keypad@mode+1
  1280     0402  120A  118A  2369  120A  118A  	fcall	_read_keypad
  1281     0407  0378               	decf	?_read_keypad,w
  1282     0408  0479               	iorwf	?_read_keypad+1,w
  1283     0409  1D03               	btfss	3,2
  1284     040A  2C0C               	goto	u971
  1285     040B  2C0D               	goto	u970
  1286     040C                     u971:
  1287     040C  2C13               	goto	l1639
  1288     040D                     u970:
  1289     040D                     l1637:
  1290                           
  1291                           ;firmware.c: 161:         start();
  1292     040D  120A  118A  2392  120A  118A  	fcall	_start
  1293     0412  2C3E               	goto	l194
  1294     0413                     l1639:
  1295     0413  3001               	movlw	1
  1296     0414  00F8               	movwf	read_keypad@mode
  1297     0415  3000               	movlw	0
  1298     0416  00F9               	movwf	read_keypad@mode+1
  1299     0417  120A  118A  2369  120A  118A  	fcall	_read_keypad
  1300     041C  3002               	movlw	2
  1301     041D  0678               	xorwf	?_read_keypad,w
  1302     041E  0479               	iorwf	?_read_keypad+1,w
  1303     041F  1D03               	btfss	3,2
  1304     0420  2C22               	goto	u981
  1305     0421  2C23               	goto	u980
  1306     0422                     u981:
  1307     0422  2C29               	goto	l1643
  1308     0423                     u980:
  1309     0423                     l1641:
  1310                           
  1311                           ;firmware.c: 163:         sleep();
  1312     0423  120A  118A  224C  120A  118A  	fcall	_sleep
  1313     0428  2C3E               	goto	l194
  1314     0429                     l1643:
  1315     0429  3001               	movlw	1
  1316     042A  00F8               	movwf	read_keypad@mode
  1317     042B  3000               	movlw	0
  1318     042C  00F9               	movwf	read_keypad@mode+1
  1319     042D  120A  118A  2369  120A  118A  	fcall	_read_keypad
  1320     0432  3003               	movlw	3
  1321     0433  0678               	xorwf	?_read_keypad,w
  1322     0434  0479               	iorwf	?_read_keypad+1,w
  1323     0435  1D03               	btfss	3,2
  1324     0436  2C38               	goto	u991
  1325     0437  2C39               	goto	u990
  1326     0438                     u991:
  1327     0438  2C3E               	goto	l194
  1328     0439                     u990:
  1329     0439                     l1645:
  1330                           
  1331                           ;firmware.c: 165:         settings();
  1332     0439  120A  118A  2590  120A  118A  	fcall	_settings
  1333     043E                     l194:
  1334     043E  0008               	return
  1335     043F                     __end_of_main_menu:
  1336                           
  1337                           	psect	text2
  1338     0392                     __ptext2:	
  1339 ;; *************** function _start *****************
  1340 ;; Defined at:
  1341 ;;		line 76 in file "firmware.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 3
  1362 ;; This function calls:
  1363 ;;		_MakeCall
  1364 ;;		_blink_sensor_led
  1365 ;;		_sensor_leds_off
  1366 ;; This function is called by:
  1367 ;;		_main_menu
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371     0392                     _start:	
  1372                           ;psect for function _start
  1373                           
  1374     0392                     l155:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1377                           ;firmware.c: 78:     while(1)
  1378                           
  1379                           
  1380                           ;firmware.c: 79:         if (RD1==1)
  1381     0392  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0393  1303               	bcf	3,6	;RP1=0, select bank0
  1383     0394  1C88               	btfss	8,1	;volatile
  1384     0395  2B97               	goto	u901
  1385     0396  2B98               	goto	u900
  1386     0397                     u901:
  1387     0397  2BA7               	goto	l156
  1388     0398                     u900:
  1389     0398                     l1589:
  1390                           
  1391                           ;firmware.c: 80:         {;firmware.c: 81:             blink_sensor_led(1);
  1392     0398  3001               	movlw	1
  1393     0399  00F0               	movwf	blink_sensor_led@sensor
  1394     039A  3000               	movlw	0
  1395     039B  00F1               	movwf	blink_sensor_led@sensor+1
  1396     039C  120A  118A  22CA  120A  118A  	fcall	_blink_sensor_led
  1397     03A1                     l1591:
  1398                           
  1399                           ;firmware.c: 82:             MakeCall();
  1400     03A1  120A  118A  225D  120A  118A  	fcall	_MakeCall
  1401                           
  1402                           ;firmware.c: 84:         }
  1403     03A6  2B92               	goto	l155
  1404     03A7                     l156:	
  1405                           ;firmware.c: 85:         else if (RD3==1)
  1406                           
  1407     03A7  1D88               	btfss	8,3	;volatile
  1408     03A8  2BAA               	goto	u911
  1409     03A9  2BAB               	goto	u910
  1410     03AA                     u911:
  1411     03AA  2BBA               	goto	l1597
  1412     03AB                     u910:
  1413     03AB                     l1593:
  1414                           
  1415                           ;firmware.c: 86:         {;firmware.c: 87:             MakeCall();
  1416     03AB  120A  118A  225D  120A  118A  	fcall	_MakeCall
  1417     03B0                     l1595:
  1418                           
  1419                           ;firmware.c: 88:             blink_sensor_led(2);
  1420     03B0  3002               	movlw	2
  1421     03B1  00F0               	movwf	blink_sensor_led@sensor
  1422     03B2  3000               	movlw	0
  1423     03B3  00F1               	movwf	blink_sensor_led@sensor+1
  1424     03B4  120A  118A  22CA  120A  118A  	fcall	_blink_sensor_led
  1425                           
  1426                           ;firmware.c: 89:         }
  1427     03B9  2B92               	goto	l155
  1428     03BA                     l1597:
  1429                           
  1430                           ;firmware.c: 91:         {;firmware.c: 92:             sensor_leds_off();
  1431     03BA  120A  118A  2241  120A  118A  	fcall	_sensor_leds_off
  1432     03BF  2B92               	goto	l155
  1433     03C0  0008               	return
  1434     03C1                     __end_of_start:
  1435                           
  1436                           	psect	text3
  1437     0241                     __ptext3:	
  1438 ;; *************** function _sensor_leds_off *****************
  1439 ;; Defined at:
  1440 ;;		line 49 in file "firmware.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		None
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_start
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467     0241                     _sensor_leds_off:	
  1468                           ;psect for function _sensor_leds_off
  1469                           
  1470     0241                     l1155:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _sensor_leds_off: []
  1473                           
  1474                           
  1475                           ;firmware.c: 51:     RB3=0;
  1476     0241  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0242  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0243  1186               	bcf	6,3	;volatile
  1479                           
  1480                           ;firmware.c: 52:     RB4=0;
  1481     0244  1206               	bcf	6,4	;volatile
  1482     0245                     l146:
  1483     0245  0008               	return
  1484     0246                     __end_of_sensor_leds_off:
  1485                           
  1486                           	psect	text4
  1487     02CA                     __ptext4:	
  1488 ;; *************** function _blink_sensor_led *****************
  1489 ;; Defined at:
  1490 ;;		line 35 in file "firmware.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  sensor          2    0[COMMON] int 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         2       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          3       0       0       0       0
  1507 ;;      Totals:         5       0       0       0       0
  1508 ;;Total ram usage:        5 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_start
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517     02CA                     _blink_sensor_led:	
  1518                           ;psect for function _blink_sensor_led
  1519                           
  1520     02CA                     l1563:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _blink_sensor_led: [wreg+status,2+status,0]
  1523                           
  1524     02CA                     l1565:
  1525                           
  1526                           ;firmware.c: 38:     {;firmware.c: 39:         RB3=1;
  1527     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1528     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1529     02CC  1586               	bsf	6,3	;volatile
  1530     02CD                     l1567:
  1531                           
  1532                           ;firmware.c: 40:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1533     02CD  301A               	movlw	26
  1534     02CE  00F4               	movwf	??_blink_sensor_led+2
  1535     02CF  305E               	movlw	94
  1536     02D0  00F3               	movwf	??_blink_sensor_led+1
  1537     02D1  306E               	movlw	110
  1538     02D2  00F2               	movwf	??_blink_sensor_led
  1539     02D3                     u1007:
  1540     02D3  0BF2               	decfsz	??_blink_sensor_led,f
  1541     02D4  2AD3               	goto	u1007
  1542     02D5  0BF3               	decfsz	??_blink_sensor_led+1,f
  1543     02D6  2AD3               	goto	u1007
  1544     02D7  0BF4               	decfsz	??_blink_sensor_led+2,f
  1545     02D8  2AD3               	goto	u1007
  1546     02D9  0000               	nop
  1547     02DA                     l1569:
  1548                           
  1549                           ;firmware.c: 41:         RB3=0;
  1550     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1551     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1552     02DC  1186               	bcf	6,3	;volatile
  1553     02DD                     l143:
  1554     02DD  0008               	return
  1555     02DE                     __end_of_blink_sensor_led:
  1556                           
  1557                           	psect	text5
  1558     025D                     __ptext5:	
  1559 ;; *************** function _MakeCall *****************
  1560 ;; Defined at:
  1561 ;;		line 66 in file "firmware.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 2
  1582 ;; This function calls:
  1583 ;;		_BlinkMainLED
  1584 ;;		__SIM900A_print
  1585 ;; This function is called by:
  1586 ;;		_start
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590     025D                     _MakeCall:	
  1591                           ;psect for function _MakeCall
  1592                           
  1593     025D                     l1577:	
  1594                           ;incstack = 0
  1595                           ; Regs used in _MakeCall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1596                           
  1597                           
  1598                           ;firmware.c: 68:    _SIM900A_print("ATD6986951309;\r\n");
  1599     025D  30B3               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1600     025E  120A  118A  2327  120A  118A  	fcall	__SIM900A_print
  1601     0263                     l1579:
  1602                           
  1603                           ;firmware.c: 69:    BlinkMainLED();
  1604     0263  120A  118A  24DD  120A  118A  	fcall	_BlinkMainLED
  1605     0268                     l152:
  1606     0268  0008               	return
  1607     0269                     __end_of_MakeCall:
  1608                           
  1609                           	psect	text6
  1610     0327                     __ptext6:	
  1611 ;; *************** function __SIM900A_print *****************
  1612 ;; Defined at:
  1613 ;;		line 44 in file "SIM900A.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  ptr             1    wreg     PTR const unsigned char 
  1616 ;;		 -> STR_1(17), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  ptr             1    1[COMMON] PTR const unsigned char 
  1619 ;;		 -> STR_1(17), 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         1       0       0       0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 1
  1636 ;; This function calls:
  1637 ;;		__SIM900A_putch
  1638 ;; This function is called by:
  1639 ;;		_MakeCall
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643     0327                     __SIM900A_print:	
  1644                           ;psect for function __SIM900A_print
  1645                           
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in __SIM900A_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1649                           ;__SIM900A_print@ptr stored from wreg
  1650     0327  00F1               	movwf	__SIM900A_print@ptr
  1651     0328                     l1525:
  1652                           
  1653                           ;SIM900A.c: 44: void _SIM900A_print(unsigned const char *ptr);SIM900A.c: 45: {;SIM900A.c
      +                          : 46:     while (*ptr != 0)
  1654     0328  2B39               	goto	l1531
  1655     0329                     l1527:
  1656                           
  1657                           ;SIM900A.c: 47:     {;SIM900A.c: 48:         _SIM900A_putch(*ptr++);
  1658     0329  0871               	movf	__SIM900A_print@ptr,w
  1659     032A  0084               	movwf	4
  1660     032B  120A  118A  200D  120A  118A  	fcall	stringdir
  1661     0330  120A  118A  2253  120A  118A  	fcall	__SIM900A_putch
  1662     0335                     l1529:
  1663     0335  3001               	movlw	1
  1664     0336  00FF               	movwf	btemp+1
  1665     0337  087F               	movf	btemp+1,w
  1666     0338  07F1               	addwf	__SIM900A_print@ptr,f
  1667     0339                     l1531:
  1668                           
  1669                           ;SIM900A.c: 46:     while (*ptr != 0)
  1670     0339  0871               	movf	__SIM900A_print@ptr,w
  1671     033A  0084               	movwf	4
  1672     033B  120A  118A  200D  120A  118A  	fcall	stringdir
  1673     0340  3A00               	xorlw	0
  1674     0341  1D03               	skipz
  1675     0342  2B44               	goto	u871
  1676     0343  2B45               	goto	u870
  1677     0344                     u871:
  1678     0344  2B29               	goto	l1527
  1679     0345                     u870:
  1680     0345                     l255:
  1681     0345  0008               	return
  1682     0346                     __end_of__SIM900A_print:
  1683                           
  1684                           	psect	text7
  1685     0253                     __ptext7:	
  1686 ;; *************** function __SIM900A_putch *****************
  1687 ;; Defined at:
  1688 ;;		line 20 in file "SIM900A.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  bt              1    wreg     unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  bt              1    0[COMMON] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         1       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0
  1705 ;;      Totals:         1       0       0       0       0
  1706 ;;Total ram usage:        1 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		__SIM900A_print
  1712 ;;		_SIM900A_send_string
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716     0253                     __SIM900A_putch:	
  1717                           ;psect for function __SIM900A_putch
  1718                           
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in __SIM900A_putch: [wreg]
  1722                           ;__SIM900A_putch@bt stored from wreg
  1723     0253  00F0               	movwf	__SIM900A_putch@bt
  1724     0254                     l913:
  1725     0254                     l233:	
  1726                           ;SIM900A.c: 20: void _SIM900A_putch(char bt);SIM900A.c: 21: {;SIM900A.c: 22:     while(!
      +                          TXIF);
  1727                           
  1728     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1730     0256  1E0C               	btfss	12,4	;volatile
  1731     0257  2A59               	goto	u111
  1732     0258  2A5A               	goto	u110
  1733     0259                     u111:
  1734     0259  2A54               	goto	l233
  1735     025A                     u110:
  1736     025A                     l915:
  1737                           
  1738                           ;SIM900A.c: 23:     TXREG=bt;
  1739     025A  0870               	movf	__SIM900A_putch@bt,w
  1740     025B  0099               	movwf	25	;volatile
  1741     025C                     l236:
  1742     025C  0008               	return
  1743     025D                     __end_of__SIM900A_putch:
  1744                           
  1745                           	psect	text8
  1746     04DD                     __ptext8:	
  1747 ;; *************** function _BlinkMainLED *****************
  1748 ;; Defined at:
  1749 ;;		line 21 in file "firmware.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0
  1765 ;;      Temps:          3       0       0       0       0
  1766 ;;      Totals:         3       0       0       0       0
  1767 ;;Total ram usage:        3 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_MakeCall
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776     04DD                     _BlinkMainLED:	
  1777                           ;psect for function _BlinkMainLED
  1778                           
  1779     04DD                     l1089:	
  1780                           ;incstack = 0
  1781                           ; Regs used in _BlinkMainLED: [wreg]
  1782                           
  1783                           
  1784                           ;firmware.c: 23:     RB1=1;
  1785     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1786     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1787     04DF  1486               	bsf	6,1	;volatile
  1788     04E0                     l1091:
  1789                           
  1790                           ;firmware.c: 24:     _delay((unsigned long)((200)*(20000000/4000.0)));
  1791     04E0  3006               	movlw	6
  1792     04E1  00F2               	movwf	??_BlinkMainLED+2
  1793     04E2  3013               	movlw	19
  1794     04E3  00F1               	movwf	??_BlinkMainLED+1
  1795     04E4  30AD               	movlw	173
  1796     04E5  00F0               	movwf	??_BlinkMainLED
  1797     04E6                     u1017:
  1798     04E6  0BF0               	decfsz	??_BlinkMainLED,f
  1799     04E7  2CE6               	goto	u1017
  1800     04E8  0BF1               	decfsz	??_BlinkMainLED+1,f
  1801     04E9  2CE6               	goto	u1017
  1802     04EA  0BF2               	decfsz	??_BlinkMainLED+2,f
  1803     04EB  2CE6               	goto	u1017
  1804     04EC  2CED               	nop2
  1805     04ED                     l1093:
  1806                           
  1807                           ;firmware.c: 25:     RB1=0;
  1808     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1809     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1810     04EF  1086               	bcf	6,1	;volatile
  1811                           
  1812                           ;firmware.c: 26:     _delay((unsigned long)((200)*(20000000/4000.0)));
  1813     04F0  3006               	movlw	6
  1814     04F1  00F2               	movwf	??_BlinkMainLED+2
  1815     04F2  3013               	movlw	19
  1816     04F3  00F1               	movwf	??_BlinkMainLED+1
  1817     04F4  30AD               	movlw	173
  1818     04F5  00F0               	movwf	??_BlinkMainLED
  1819     04F6                     u1027:
  1820     04F6  0BF0               	decfsz	??_BlinkMainLED,f
  1821     04F7  2CF6               	goto	u1027
  1822     04F8  0BF1               	decfsz	??_BlinkMainLED+1,f
  1823     04F9  2CF6               	goto	u1027
  1824     04FA  0BF2               	decfsz	??_BlinkMainLED+2,f
  1825     04FB  2CF6               	goto	u1027
  1826     04FC  2CFD               	nop2
  1827     04FD                     l1095:
  1828                           
  1829                           ;firmware.c: 27:     RB1=1;
  1830     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1831     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1832     04FF  1486               	bsf	6,1	;volatile
  1833                           
  1834                           ;firmware.c: 28:     _delay((unsigned long)((200)*(20000000/4000.0)));
  1835     0500  3006               	movlw	6
  1836     0501  00F2               	movwf	??_BlinkMainLED+2
  1837     0502  3013               	movlw	19
  1838     0503  00F1               	movwf	??_BlinkMainLED+1
  1839     0504  30AD               	movlw	173
  1840     0505  00F0               	movwf	??_BlinkMainLED
  1841     0506                     u1037:
  1842     0506  0BF0               	decfsz	??_BlinkMainLED,f
  1843     0507  2D06               	goto	u1037
  1844     0508  0BF1               	decfsz	??_BlinkMainLED+1,f
  1845     0509  2D06               	goto	u1037
  1846     050A  0BF2               	decfsz	??_BlinkMainLED+2,f
  1847     050B  2D06               	goto	u1037
  1848     050C  2D0D               	nop2
  1849     050D                     l1097:
  1850                           
  1851                           ;firmware.c: 29:     RB1=0;
  1852     050D  1283               	bcf	3,5	;RP0=0, select bank0
  1853     050E  1303               	bcf	3,6	;RP1=0, select bank0
  1854     050F  1086               	bcf	6,1	;volatile
  1855                           
  1856                           ;firmware.c: 30:     _delay((unsigned long)((200)*(20000000/4000.0)));
  1857     0510  3006               	movlw	6
  1858     0511  00F2               	movwf	??_BlinkMainLED+2
  1859     0512  3013               	movlw	19
  1860     0513  00F1               	movwf	??_BlinkMainLED+1
  1861     0514  30AD               	movlw	173
  1862     0515  00F0               	movwf	??_BlinkMainLED
  1863     0516                     u1047:
  1864     0516  0BF0               	decfsz	??_BlinkMainLED,f
  1865     0517  2D16               	goto	u1047
  1866     0518  0BF1               	decfsz	??_BlinkMainLED+1,f
  1867     0519  2D16               	goto	u1047
  1868     051A  0BF2               	decfsz	??_BlinkMainLED+2,f
  1869     051B  2D16               	goto	u1047
  1870     051C  2D1D               	nop2
  1871     051D                     l1099:
  1872                           
  1873                           ;firmware.c: 31:     RB1=1;
  1874     051D  1283               	bcf	3,5	;RP0=0, select bank0
  1875     051E  1303               	bcf	3,6	;RP1=0, select bank0
  1876     051F  1486               	bsf	6,1	;volatile
  1877                           
  1878                           ;firmware.c: 32:     _delay((unsigned long)((200)*(20000000/4000.0)));
  1879     0520  3006               	movlw	6
  1880     0521  00F2               	movwf	??_BlinkMainLED+2
  1881     0522  3013               	movlw	19
  1882     0523  00F1               	movwf	??_BlinkMainLED+1
  1883     0524  30AD               	movlw	173
  1884     0525  00F0               	movwf	??_BlinkMainLED
  1885     0526                     u1057:
  1886     0526  0BF0               	decfsz	??_BlinkMainLED,f
  1887     0527  2D26               	goto	u1057
  1888     0528  0BF1               	decfsz	??_BlinkMainLED+1,f
  1889     0529  2D26               	goto	u1057
  1890     052A  0BF2               	decfsz	??_BlinkMainLED+2,f
  1891     052B  2D26               	goto	u1057
  1892     052C  2D2D               	nop2
  1893     052D                     l1101:
  1894                           
  1895                           ;firmware.c: 33:     RB1=0;
  1896     052D  1283               	bcf	3,5	;RP0=0, select bank0
  1897     052E  1303               	bcf	3,6	;RP1=0, select bank0
  1898     052F  1086               	bcf	6,1	;volatile
  1899     0530                     l139:
  1900     0530  0008               	return
  1901     0531                     __end_of_BlinkMainLED:
  1902                           
  1903                           	psect	text9
  1904     024C                     __ptext9:	
  1905 ;; *************** function _sleep *****************
  1906 ;; Defined at:
  1907 ;;		line 96 in file "firmware.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		None
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main_menu
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934     024C                     _sleep:	
  1935                           ;psect for function _sleep
  1936                           
  1937     024C                     l1187:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _sleep: []
  1940                           
  1941     024C                     l165:	
  1942                           ;firmware.c: 98:     while(RD5!=1);
  1943                           
  1944     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1945     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1946     024E  1E88               	btfss	8,5	;volatile
  1947     024F  2A51               	goto	u411
  1948     0250  2A52               	goto	u410
  1949     0251                     u411:
  1950     0251  2A4C               	goto	l165
  1951     0252                     u410:
  1952     0252                     l168:
  1953     0252  0008               	return
  1954     0253                     __end_of_sleep:
  1955                           
  1956                           	psect	text10
  1957     0590                     __ptext10:	
  1958 ;; *************** function _settings *****************
  1959 ;; Defined at:
  1960 ;;		line 113 in file "firmware.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  phone           2   26[BANK0 ] PTR unsigned char 
  1965 ;;		 -> RAM(512), 
  1966 ;;  saved_number    1   28[BANK0 ] PTR unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       3       0       0       0
  1978 ;;      Temps:          0       0       0       0       0
  1979 ;;      Totals:         0       3       0       0       0
  1980 ;;Total ram usage:        3 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 3
  1983 ;; This function calls:
  1984 ;;		_LCD_Write_String
  1985 ;;		_concatenate
  1986 ;;		_read_keypad
  1987 ;;		_read_saved_phone
  1988 ;;		_save_phone
  1989 ;; This function is called by:
  1990 ;;		_main_menu
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994     0590                     _settings:	
  1995                           ;psect for function _settings
  1996                           
  1997     0590                     l1599:	
  1998                           ;incstack = 0
  1999                           ; Regs used in _settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2000                           
  2001                           
  2002                           ;firmware.c: 115:     LCD_Write_String("Settings\nSave phone number(1) Read saved number
      +                          (2)");
  2003     0590  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2004     0591  1283               	bcf	3,5	;RP0=0, select bank0
  2005     0592  1303               	bcf	3,6	;RP1=0, select bank0
  2006     0593  00B6               	movwf	LCD_Write_String@Str
  2007     0594  3080               	movlw	128
  2008     0595  00B7               	movwf	LCD_Write_String@Str+1
  2009     0596  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2010     059B                     l1601:
  2011                           
  2012                           ;firmware.c: 116:     if (read_keypad(1) == 1)
  2013     059B  3001               	movlw	1
  2014     059C  00F8               	movwf	read_keypad@mode
  2015     059D  3000               	movlw	0
  2016     059E  00F9               	movwf	read_keypad@mode+1
  2017     059F  120A  118A  2369  120A  118A  	fcall	_read_keypad
  2018     05A4  0378               	decf	?_read_keypad,w
  2019     05A5  0479               	iorwf	?_read_keypad+1,w
  2020     05A6  1D03               	btfss	3,2
  2021     05A7  2DA9               	goto	u921
  2022     05A8  2DAA               	goto	u920
  2023     05A9                     u921:
  2024     05A9  2DEB               	goto	l1615
  2025     05AA                     u920:
  2026     05AA                     l1603:
  2027                           
  2028                           ;firmware.c: 117:     {;firmware.c: 118:         char *phone;;firmware.c: 119:         L
      +                          CD_Write_String("Enter your phone");
  2029     05AA  30C4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2030     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2031     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2032     05AD  00B6               	movwf	LCD_Write_String@Str
  2033     05AE  3080               	movlw	128
  2034     05AF  00B7               	movwf	LCD_Write_String@Str+1
  2035     05B0  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2036     05B5                     l1605:
  2037                           
  2038                           ;firmware.c: 120:         phone = read_keypad(2);
  2039     05B5  3002               	movlw	2
  2040     05B6  00F8               	movwf	read_keypad@mode
  2041     05B7  3000               	movlw	0
  2042     05B8  00F9               	movwf	read_keypad@mode+1
  2043     05B9  120A  118A  2369  120A  118A  	fcall	_read_keypad
  2044     05BE  0878               	movf	?_read_keypad,w
  2045     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2046     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2047     05C1  00BA               	movwf	settings@phone
  2048     05C2  0879               	movf	?_read_keypad+1,w
  2049     05C3  00BB               	movwf	settings@phone+1
  2050     05C4                     l1607:
  2051                           
  2052                           ;firmware.c: 121:         if (save_phone(phone) == 0)
  2053     05C4  083A               	movf	settings@phone,w
  2054     05C5  00F0               	movwf	save_phone@phone
  2055     05C6  083B               	movf	settings@phone+1,w
  2056     05C7  00F1               	movwf	save_phone@phone+1
  2057     05C8  120A  118A  223E  120A  118A  	fcall	_save_phone
  2058     05CD  0870               	movf	?_save_phone,w
  2059     05CE  0471               	iorwf	?_save_phone+1,w
  2060     05CF  1D03               	btfss	3,2
  2061     05D0  2DD2               	goto	u931
  2062     05D1  2DD3               	goto	u930
  2063     05D2                     u931:
  2064     05D2  2DDF               	goto	l1611
  2065     05D3                     u930:
  2066     05D3                     l1609:
  2067                           
  2068                           ;firmware.c: 122:             LCD_Write_String("Phone saved successfully");
  2069     05D3  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2070     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2071     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2072     05D6  00B6               	movwf	LCD_Write_String@Str
  2073     05D7  3080               	movlw	128
  2074     05D8  00B7               	movwf	LCD_Write_String@Str+1
  2075     05D9  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2076     05DE  2E44               	goto	l180
  2077     05DF                     l1611:
  2078                           
  2079                           ;firmware.c: 124:             LCD_Write_String("Error saving phone");
  2080     05DF  30A0               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2081     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2082     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2083     05E2  00B6               	movwf	LCD_Write_String@Str
  2084     05E3  3080               	movlw	128
  2085     05E4  00B7               	movwf	LCD_Write_String@Str+1
  2086     05E5  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2087     05EA  2E44               	goto	l180
  2088     05EB                     l1615:
  2089                           
  2090                           ;firmware.c: 127:     char *saved_number;;firmware.c: 128:     if (read_saved_phone() ==
      +                           "err")
  2091     05EB  120A  118A  223C  120A  118A  	fcall	_read_saved_phone
  2092     05F0  3AE5               	xorlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2093     05F1  1D03               	skipz
  2094     05F2  2DF4               	goto	u941
  2095     05F3  2DF5               	goto	u940
  2096     05F4                     u941:
  2097     05F4  2E01               	goto	l1621
  2098     05F5                     u940:
  2099     05F5                     l1617:
  2100                           
  2101                           ;firmware.c: 129:     {;firmware.c: 130:         LCD_Write_String("Error reading number"
      +                          );
  2102     05F5  3077               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2103     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  2104     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  2105     05F8  00B6               	movwf	LCD_Write_String@Str
  2106     05F9  3080               	movlw	128
  2107     05FA  00B7               	movwf	LCD_Write_String@Str+1
  2108     05FB  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2109     0600  2E44               	goto	l180
  2110     0601                     l1621:
  2111                           
  2112                           ;firmware.c: 133:     if (read_saved_phone() == "")
  2113     0601  120A  118A  223C  120A  118A  	fcall	_read_saved_phone
  2114     0606  3AC3               	xorlw	(low (((STR_1+16)-__stringbase)| (0+32768)))& (0+255)
  2115     0607  1D03               	skipz
  2116     0608  2E0A               	goto	u951
  2117     0609  2E0B               	goto	u950
  2118     060A                     u951:
  2119     060A  2E17               	goto	l1627
  2120     060B                     u950:
  2121     060B                     l1623:
  2122                           
  2123                           ;firmware.c: 134:     {;firmware.c: 135:         LCD_Write_String("No number saved");
  2124     060B  30D5               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2125     060C  1283               	bcf	3,5	;RP0=0, select bank0
  2126     060D  1303               	bcf	3,6	;RP1=0, select bank0
  2127     060E  00B6               	movwf	LCD_Write_String@Str
  2128     060F  3080               	movlw	128
  2129     0610  00B7               	movwf	LCD_Write_String@Str+1
  2130     0611  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2131     0616  2E44               	goto	l180
  2132     0617                     l1627:
  2133                           
  2134                           ;firmware.c: 138:     saved_number = read_saved_phone();
  2135     0617  120A  118A  223C  120A  118A  	fcall	_read_saved_phone
  2136     061C  1283               	bcf	3,5	;RP0=0, select bank0
  2137     061D  1303               	bcf	3,6	;RP1=0, select bank0
  2138     061E  00BC               	movwf	settings@saved_number
  2139     061F                     l1629:
  2140                           
  2141                           ;firmware.c: 142:     if (read_keypad(1) == 2)
  2142     061F  3001               	movlw	1
  2143     0620  00F8               	movwf	read_keypad@mode
  2144     0621  3000               	movlw	0
  2145     0622  00F9               	movwf	read_keypad@mode+1
  2146     0623  120A  118A  2369  120A  118A  	fcall	_read_keypad
  2147     0628  3002               	movlw	2
  2148     0629  0678               	xorwf	?_read_keypad,w
  2149     062A  0479               	iorwf	?_read_keypad+1,w
  2150     062B  1D03               	btfss	3,2
  2151     062C  2E2E               	goto	u961
  2152     062D  2E2F               	goto	u960
  2153     062E                     u961:
  2154     062E  2E44               	goto	l180
  2155     062F                     u960:
  2156     062F                     l1631:
  2157                           
  2158                           ;firmware.c: 143:         LCD_Write_String(concatenate("Saved phone number\n", saved_num
      +                          ber));
  2159     062F  1283               	bcf	3,5	;RP0=0, select bank0
  2160     0630  1303               	bcf	3,6	;RP1=0, select bank0
  2161     0631  083C               	movf	settings@saved_number,w
  2162     0632  00AE               	movwf	concatenate@s2
  2163     0633  308C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2164     0634  120A  118A  248C  120A  118A  	fcall	_concatenate
  2165     0639  1283               	bcf	3,5	;RP0=0, select bank0
  2166     063A  1303               	bcf	3,6	;RP1=0, select bank0
  2167     063B  082E               	movf	?_concatenate,w
  2168     063C  00B6               	movwf	LCD_Write_String@Str
  2169     063D  082F               	movf	?_concatenate+1,w
  2170     063E  00B7               	movwf	LCD_Write_String@Str+1
  2171     063F  120A  118A  23C1  120A  118A  	fcall	_LCD_Write_String
  2172     0644                     l180:
  2173     0644  0008               	return
  2174     0645                     __end_of_settings:
  2175                           
  2176                           	psect	text11
  2177     023E                     __ptext11:	
  2178 ;; *************** function _save_phone *****************
  2179 ;; Defined at:
  2180 ;;		line 104 in file "firmware.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  phone           2    0[COMMON] PTR unsigned char 
  2183 ;;		 -> RAM(512), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2    0[COMMON] int 
  2188 ;; Registers used:
  2189 ;;		status,2
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         2       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0
  2198 ;;      Totals:         2       0       0       0       0
  2199 ;;Total ram usage:        2 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_settings
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208     023E                     _save_phone:	
  2209                           ;psect for function _save_phone
  2210                           
  2211     023E                     l1581:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _save_phone: [status,2]
  2214                           
  2215                           
  2216                           ;firmware.c: 104: int save_phone(char *phone);firmware.c: 105: {;firmware.c: 106:     re
      +                          turn 0;
  2217     023E  01F0               	clrf	?_save_phone
  2218     023F  01F1               	clrf	?_save_phone+1
  2219     0240                     l171:
  2220     0240  0008               	return
  2221     0241                     __end_of_save_phone:
  2222                           
  2223                           	psect	text12
  2224     023C                     __ptext12:	
  2225 ;; *************** function _read_saved_phone *****************
  2226 ;; Defined at:
  2227 ;;		line 108 in file "firmware.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  phone           1    1[COMMON] PTR unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2    0[COMMON] PTR unsigned char 
  2234 ;; Registers used:
  2235 ;;		wreg
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         1       0       0       0       0
  2242 ;;      Locals:         1       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         2       0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_settings
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254     023C                     _read_saved_phone:	
  2255                           ;psect for function _read_saved_phone
  2256                           
  2257     023C                     l1585:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _read_saved_phone: [wreg]
  2260                           
  2261                           
  2262                           ;firmware.c: 110:     char *phone;;firmware.c: 111:     return phone;
  2263     023C  0871               	movf	read_saved_phone@phone,w
  2264     023D                     l174:
  2265     023D  0008               	return
  2266     023E                     __end_of_read_saved_phone:
  2267                           
  2268                           	psect	text13
  2269     0369                     __ptext13:	
  2270 ;; *************** function _read_keypad *****************
  2271 ;; Defined at:
  2272 ;;		line 77 in file "keypad_4x4.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  mode            2    8[COMMON] int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  buffer          2   12[COMMON] PTR unsigned char 
  2277 ;;		 -> RAM(512), 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2    8[COMMON] PTR unsigned char 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         2       0       0       0       0
  2288 ;;      Locals:         2       0       0       0       0
  2289 ;;      Temps:          2       0       0       0       0
  2290 ;;      Totals:         6       0       0       0       0
  2291 ;;Total ram usage:        6 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 2
  2294 ;; This function calls:
  2295 ;;		_read_keypad_char
  2296 ;; This function is called by:
  2297 ;;		_settings
  2298 ;;		_main_menu
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302     0369                     _read_keypad:	
  2303                           ;psect for function _read_keypad
  2304                           
  2305     0369                     l1533:	
  2306                           ;incstack = 0
  2307                           ; Regs used in _read_keypad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2308                           
  2309                           
  2310                           ;keypad_4x4.c: 77: char *read_keypad(int mode);keypad_4x4.c: 78: {;keypad_4x4.c: 79:    
      +                           char *buffer;;keypad_4x4.c: 80:     if (mode == 2)
  2311     0369  3002               	movlw	2
  2312     036A  0678               	xorwf	read_keypad@mode,w
  2313     036B  0479               	iorwf	read_keypad@mode+1,w
  2314     036C  1D03               	btfss	3,2
  2315     036D  2B6F               	goto	u881
  2316     036E  2B70               	goto	u880
  2317     036F                     u881:
  2318     036F  2B82               	goto	l1543
  2319     0370                     u880:
  2320     0370                     l1535:
  2321                           
  2322                           ;keypad_4x4.c: 83:         {;keypad_4x4.c: 85:             buffer = read_keypad_char();
  2323     0370  120A  118A  2269  120A  118A  	fcall	_read_keypad_char
  2324     0375  00FA               	movwf	??_read_keypad
  2325     0376  01FB               	clrf	??_read_keypad+1
  2326     0377  087A               	movf	??_read_keypad,w
  2327     0378  00FC               	movwf	read_keypad@buffer
  2328     0379  087B               	movf	??_read_keypad+1,w
  2329     037A  00FD               	movwf	read_keypad@buffer+1
  2330     037B                     l1537:
  2331                           
  2332                           ;keypad_4x4.c: 86:             buffer++;
  2333     037B  3001               	movlw	1
  2334     037C  07FC               	addwf	read_keypad@buffer,f
  2335     037D  1803               	skipnc
  2336     037E  0AFD               	incf	read_keypad@buffer+1,f
  2337     037F  3000               	movlw	0
  2338     0380  07FD               	addwf	read_keypad@buffer+1,f
  2339     0381  2B70               	goto	l1535
  2340     0382                     l1543:
  2341                           
  2342                           ;keypad_4x4.c: 90:     buffer = read_keypad_char();
  2343     0382  120A  118A  2269  120A  118A  	fcall	_read_keypad_char
  2344     0387  00FA               	movwf	??_read_keypad
  2345     0388  01FB               	clrf	??_read_keypad+1
  2346     0389  087A               	movf	??_read_keypad,w
  2347     038A  00FC               	movwf	read_keypad@buffer
  2348     038B  087B               	movf	??_read_keypad+1,w
  2349     038C  00FD               	movwf	read_keypad@buffer+1
  2350     038D                     l1545:
  2351                           
  2352                           ;keypad_4x4.c: 91:     return buffer;
  2353     038D  087C               	movf	read_keypad@buffer,w
  2354     038E  00F8               	movwf	?_read_keypad
  2355     038F  087D               	movf	read_keypad@buffer+1,w
  2356     0390  00F9               	movwf	?_read_keypad+1
  2357     0391                     l56:
  2358     0391  0008               	return
  2359     0392                     __end_of_read_keypad:
  2360                           
  2361                           	psect	text14
  2362     0269                     __ptext14:	
  2363 ;; *************** function _read_keypad_char *****************
  2364 ;; Defined at:
  2365 ;;		line 64 in file "keypad_4x4.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  ch              1    7[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      unsigned char 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0
  2382 ;;      Totals:         1       0       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 1
  2386 ;; This function calls:
  2387 ;;		_read_keypad_pins
  2388 ;; This function is called by:
  2389 ;;		_read_keypad
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393     0269                     _read_keypad_char:	
  2394                           ;psect for function _read_keypad_char
  2395                           
  2396     0269                     l45:	
  2397                           ;incstack = 0
  2398                           ; Regs used in _read_keypad_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2399                           ;keypad_4x4.c: 66:     char ch;;keypad_4x4.c: 68:     while (1)
  2400                           
  2401     0269                     l1439:
  2402                           
  2403                           ;keypad_4x4.c: 69:     {;keypad_4x4.c: 70:         ch = read_keypad_pins();
  2404     0269  120A  118A  2531  120A  118A  	fcall	_read_keypad_pins
  2405     026E  00F7               	movwf	read_keypad_char@ch
  2406     026F                     l1441:
  2407                           
  2408                           ;keypad_4x4.c: 71:         if (ch !=0)
  2409     026F  0877               	movf	read_keypad_char@ch,w
  2410     0270  1903               	btfsc	3,2
  2411     0271  2A73               	goto	u771
  2412     0272  2A74               	goto	u770
  2413     0273                     u771:
  2414     0273  2A69               	goto	l45
  2415     0274                     u770:
  2416     0274                     l1443:
  2417                           
  2418                           ;keypad_4x4.c: 72:             return ch;
  2419     0274  0877               	movf	read_keypad_char@ch,w
  2420     0275                     l47:
  2421     0275  0008               	return
  2422     0276                     __end_of_read_keypad_char:
  2423                           
  2424                           	psect	text15
  2425     0531                     __ptext15:	
  2426 ;; *************** function _read_keypad_pins *****************
  2427 ;; Defined at:
  2428 ;;		line 35 in file "keypad_4x4.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  COL             2    5[COMMON] int 
  2433 ;;  ROW             2    3[COMMON] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      unsigned char 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         4       0       0       0       0
  2445 ;;      Temps:          3       0       0       0       0
  2446 ;;      Totals:         7       0       0       0       0
  2447 ;;Total ram usage:        7 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_read_keypad_char
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     0531                     _read_keypad_pins:	
  2457                           ;psect for function _read_keypad_pins
  2458                           
  2459     0531                     l1319:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _read_keypad_pins: [wreg-fsr0h+status,2+status,0]
  2462                           
  2463                           
  2464                           ;keypad_4x4.c: 37:     int ROW, COL;;keypad_4x4.c: 38:     if (RB4 == 1)
  2465     0531  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0532  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0533  1E06               	btfss	6,4	;volatile
  2468     0534  2D36               	goto	u531
  2469     0535  2D37               	goto	u530
  2470     0536                     u531:
  2471     0536  2D3A               	goto	l23
  2472     0537                     u530:
  2473     0537                     l1321:
  2474                           
  2475                           ;keypad_4x4.c: 39:         ROW = 0;
  2476     0537  01F3               	clrf	read_keypad_pins@ROW
  2477     0538  01F4               	clrf	read_keypad_pins@ROW+1
  2478     0539  2D57               	goto	l24
  2479     053A                     l23:	
  2480                           ;keypad_4x4.c: 40:     else if (RB5 == 1)
  2481                           
  2482     053A  1E86               	btfss	6,5	;volatile
  2483     053B  2D3D               	goto	u541
  2484     053C  2D3E               	goto	u540
  2485     053D                     u541:
  2486     053D  2D43               	goto	l25
  2487     053E                     u540:
  2488     053E                     l1323:
  2489                           
  2490                           ;keypad_4x4.c: 41:         ROW = 1;
  2491     053E  3001               	movlw	1
  2492     053F  00F3               	movwf	read_keypad_pins@ROW
  2493     0540  3000               	movlw	0
  2494     0541  00F4               	movwf	read_keypad_pins@ROW+1
  2495     0542  2D57               	goto	l24
  2496     0543                     l25:	
  2497                           ;keypad_4x4.c: 42:     else if (RB6 == 1)
  2498                           
  2499     0543  1F06               	btfss	6,6	;volatile
  2500     0544  2D46               	goto	u551
  2501     0545  2D47               	goto	u550
  2502     0546                     u551:
  2503     0546  2D4C               	goto	l27
  2504     0547                     u550:
  2505     0547                     l1325:
  2506                           
  2507                           ;keypad_4x4.c: 43:         ROW = 2;
  2508     0547  3002               	movlw	2
  2509     0548  00F3               	movwf	read_keypad_pins@ROW
  2510     0549  3000               	movlw	0
  2511     054A  00F4               	movwf	read_keypad_pins@ROW+1
  2512     054B  2D57               	goto	l24
  2513     054C                     l27:	
  2514                           ;keypad_4x4.c: 44:     else if (RB7 == 1)
  2515                           
  2516     054C  1F86               	btfss	6,7	;volatile
  2517     054D  2D4F               	goto	u561
  2518     054E  2D50               	goto	u560
  2519     054F                     u561:
  2520     054F  2D55               	goto	l1329
  2521     0550                     u560:
  2522     0550                     l1327:
  2523                           
  2524                           ;keypad_4x4.c: 45:         ROW = 3;
  2525     0550  3003               	movlw	3
  2526     0551  00F3               	movwf	read_keypad_pins@ROW
  2527     0552  3000               	movlw	0
  2528     0553  00F4               	movwf	read_keypad_pins@ROW+1
  2529     0554  2D57               	goto	l24
  2530     0555                     l1329:
  2531                           
  2532                           ;keypad_4x4.c: 47:         return 0;
  2533     0555  3000               	movlw	0
  2534     0556  2D8F               	goto	l31
  2535     0557                     l24:
  2536                           
  2537                           ;keypad_4x4.c: 48:     if (RB0 == 1)
  2538     0557  1C06               	btfss	6,0	;volatile
  2539     0558  2D5A               	goto	u571
  2540     0559  2D5B               	goto	u570
  2541     055A                     u571:
  2542     055A  2D5E               	goto	l32
  2543     055B                     u570:
  2544     055B                     l1333:
  2545                           
  2546                           ;keypad_4x4.c: 49:         COL = 0;
  2547     055B  01F5               	clrf	read_keypad_pins@COL
  2548     055C  01F6               	clrf	read_keypad_pins@COL+1
  2549     055D  2D78               	goto	l1345
  2550     055E                     l32:	
  2551                           ;keypad_4x4.c: 50:     else if (RB1 == 1)
  2552                           
  2553     055E  1C86               	btfss	6,1	;volatile
  2554     055F  2D61               	goto	u581
  2555     0560  2D62               	goto	u580
  2556     0561                     u581:
  2557     0561  2D67               	goto	l34
  2558     0562                     u580:
  2559     0562                     l1335:
  2560                           
  2561                           ;keypad_4x4.c: 51:         COL = 1;
  2562     0562  3001               	movlw	1
  2563     0563  00F5               	movwf	read_keypad_pins@COL
  2564     0564  3000               	movlw	0
  2565     0565  00F6               	movwf	read_keypad_pins@COL+1
  2566     0566  2D78               	goto	l1345
  2567     0567                     l34:	
  2568                           ;keypad_4x4.c: 52:     else if (RB2 == 1)
  2569                           
  2570     0567  1D06               	btfss	6,2	;volatile
  2571     0568  2D6A               	goto	u591
  2572     0569  2D6B               	goto	u590
  2573     056A                     u591:
  2574     056A  2D70               	goto	l36
  2575     056B                     u590:
  2576     056B                     l1337:
  2577                           
  2578                           ;keypad_4x4.c: 53:         COL = 2;
  2579     056B  3002               	movlw	2
  2580     056C  00F5               	movwf	read_keypad_pins@COL
  2581     056D  3000               	movlw	0
  2582     056E  00F6               	movwf	read_keypad_pins@COL+1
  2583     056F  2D78               	goto	l1345
  2584     0570                     l36:	
  2585                           ;keypad_4x4.c: 54:     else if (RB3 == 1)
  2586                           
  2587     0570  1D86               	btfss	6,3	;volatile
  2588     0571  2D73               	goto	u601
  2589     0572  2D74               	goto	u600
  2590     0573                     u601:
  2591     0573  2D55               	goto	l1329
  2592     0574                     u600:
  2593     0574                     l1339:
  2594                           
  2595                           ;keypad_4x4.c: 55:         COL = 3;
  2596     0574  3003               	movlw	3
  2597     0575  00F5               	movwf	read_keypad_pins@COL
  2598     0576  3000               	movlw	0
  2599     0577  00F6               	movwf	read_keypad_pins@COL+1
  2600     0578                     l1345:
  2601     0578  0806               	movf	6,w	;volatile
  2602     0579  1D03               	btfss	3,2
  2603     057A  2D7C               	goto	u611
  2604     057B  2D7D               	goto	u610
  2605     057C                     u611:
  2606     057C  2D78               	goto	l1345
  2607     057D                     u610:
  2608     057D                     l1347:
  2609                           
  2610                           ;keypad_4x4.c: 60:     return characters[ROW][COL];
  2611     057D  0873               	movf	read_keypad_pins@ROW,w
  2612     057E  00F0               	movwf	??_read_keypad_pins
  2613     057F  3002               	movlw	2
  2614     0580                     u625:
  2615     0580  1003               	clrc
  2616     0581  0DF0               	rlf	??_read_keypad_pins,f
  2617     0582  3EFF               	addlw	-1
  2618     0583  1D03               	skipz
  2619     0584  2D80               	goto	u625
  2620     0585  303D               	movlw	(low (_characters| 0))& (0+255)
  2621     0586  0770               	addwf	??_read_keypad_pins,w
  2622     0587  00F1               	movwf	??_read_keypad_pins+1
  2623     0588  0875               	movf	read_keypad_pins@COL,w
  2624     0589  0771               	addwf	??_read_keypad_pins+1,w
  2625     058A  00F2               	movwf	??_read_keypad_pins+2
  2626     058B  0872               	movf	??_read_keypad_pins+2,w
  2627     058C  0084               	movwf	4
  2628     058D  1383               	bcf	3,7	;select IRP bank0
  2629     058E  0800               	movf	0,w
  2630     058F                     l31:
  2631     058F  0008               	return
  2632     0590                     __end_of_read_keypad_pins:
  2633                           
  2634                           	psect	text16
  2635     048C                     __ptext16:	
  2636 ;; *************** function _concatenate *****************
  2637 ;; Defined at:
  2638 ;;		line 10 in file "firmware.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  s1              1    wreg     PTR const unsigned char 
  2641 ;;		 -> STR_10(20), 
  2642 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  s1              1   19[BANK0 ] PTR const unsigned char 
  2645 ;;		 -> STR_10(20), 
  2646 ;;  result          2   20[BANK0 ] PTR unsigned char 
  2647 ;;		 -> __heap_hi(0), NULL(0), 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  2   14[BANK0 ] PTR unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       1       0       0       0
  2658 ;;      Locals:         0       3       0       0       0
  2659 ;;      Temps:          0       4       0       0       0
  2660 ;;      Totals:         0       8       0       0       0
  2661 ;;Total ram usage:        8 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 2
  2664 ;; This function calls:
  2665 ;;		_malloc
  2666 ;;		_strcpy
  2667 ;;		_strlen
  2668 ;; This function is called by:
  2669 ;;		_settings
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     048C                     _concatenate:	
  2674                           ;psect for function _concatenate
  2675                           
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _concatenate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2679                           ;concatenate@s1 stored from wreg
  2680     048C  1283               	bcf	3,5	;RP0=0, select bank0
  2681     048D  1303               	bcf	3,6	;RP1=0, select bank0
  2682     048E  00B3               	movwf	concatenate@s1
  2683     048F                     l1557:
  2684                           
  2685                           ;firmware.c: 10: char *concatenate(const char *s1, const char *s2);firmware.c: 11: {;fir
      +                          mware.c: 12:     char *result = malloc(strlen(s1) + strlen(s2) + 1);
  2686     048F  0833               	movf	concatenate@s1,w
  2687     0490  120A  118A  230C  120A  118A  	fcall	_strlen
  2688     0495  0870               	movf	?_strlen,w
  2689     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0498  00AF               	movwf	??_concatenate
  2692     0499  0871               	movf	?_strlen+1,w
  2693     049A  00B0               	movwf	??_concatenate+1
  2694     049B  082E               	movf	concatenate@s2,w
  2695     049C  120A  118A  230C  120A  118A  	fcall	_strlen
  2696     04A1  0870               	movf	?_strlen,w
  2697     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2698     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2699     04A4  072F               	addwf	??_concatenate,w
  2700     04A5  00B1               	movwf	??_concatenate+2
  2701     04A6  0871               	movf	?_strlen+1,w
  2702     04A7  1803               	skipnc
  2703     04A8  0A71               	incf	?_strlen+1,w
  2704     04A9  0730               	addwf	??_concatenate+1,w
  2705     04AA  00B2               	movwf	??_concatenate+3
  2706     04AB  0831               	movf	??_concatenate+2,w
  2707     04AC  3E01               	addlw	1
  2708     04AD  00A0               	movwf	malloc@n
  2709     04AE  0832               	movf	??_concatenate+3,w
  2710     04AF  1803               	skipnc
  2711     04B0  3E01               	addlw	1
  2712     04B1  3E00               	addlw	0
  2713     04B2  00A1               	movwf	malloc@n+1
  2714     04B3  120A  118A  2645  120A  118A  	fcall	_malloc
  2715     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2716     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2717     04BA  0820               	movf	?_malloc,w
  2718     04BB  00B4               	movwf	concatenate@result
  2719     04BC  0821               	movf	?_malloc+1,w
  2720     04BD  00B5               	movwf	concatenate@result+1
  2721                           
  2722                           ;firmware.c: 13:     strcpy(result, s1);
  2723     04BE  0834               	movf	concatenate@result,w
  2724     04BF  00F0               	movwf	strcpy@dest
  2725     04C0  0835               	movf	concatenate@result+1,w
  2726     04C1  00F1               	movwf	strcpy@dest+1
  2727     04C2  0833               	movf	concatenate@s1,w
  2728     04C3  00F2               	movwf	strcpy@src
  2729     04C4  120A  118A  2346  120A  118A  	fcall	_strcpy
  2730                           
  2731                           ;firmware.c: 14:     strcpy(result, s2);
  2732     04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2733     04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2734     04CB  0834               	movf	concatenate@result,w
  2735     04CC  00F0               	movwf	strcpy@dest
  2736     04CD  0835               	movf	concatenate@result+1,w
  2737     04CE  00F1               	movwf	strcpy@dest+1
  2738     04CF  082E               	movf	concatenate@s2,w
  2739     04D0  00F2               	movwf	strcpy@src
  2740     04D1  120A  118A  2346  120A  118A  	fcall	_strcpy
  2741     04D6                     l1559:
  2742                           
  2743                           ;firmware.c: 15:     return result;
  2744     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2745     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2746     04D8  0834               	movf	concatenate@result,w
  2747     04D9  00AE               	movwf	?_concatenate
  2748     04DA  0835               	movf	concatenate@result+1,w
  2749     04DB  00AF               	movwf	?_concatenate+1
  2750     04DC                     l136:
  2751     04DC  0008               	return
  2752     04DD                     __end_of_concatenate:
  2753                           
  2754                           	psect	text17
  2755     030C                     __ptext17:	
  2756 ;; *************** function _strlen *****************
  2757 ;; Defined at:
  2758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  s               1    wreg     PTR const unsigned char 
  2761 ;;		 -> STR_10(20), 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  s               1    3[COMMON] PTR const unsigned char 
  2764 ;;		 -> STR_10(20), 
  2765 ;;  a               1    2[COMMON] PTR const unsigned char 
  2766 ;;		 -> STR_10(20), 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2    0[COMMON] unsigned int 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         2       0       0       0       0
  2777 ;;      Locals:         2       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         4       0       0       0       0
  2780 ;;Total ram usage:        4 bytes
  2781 ;; Hardware stack levels used: 2
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_concatenate
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789     030C                     _strlen:	
  2790                           ;psect for function _strlen
  2791                           
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2795                           ;strlen@s stored from wreg
  2796     030C  00F3               	movwf	strlen@s
  2797     030D                     l1459:
  2798     030D  0873               	movf	strlen@s,w
  2799     030E  00F2               	movwf	strlen@a
  2800     030F  2B14               	goto	l1463
  2801     0310                     l1461:
  2802     0310  3001               	movlw	1
  2803     0311  00FF               	movwf	btemp+1
  2804     0312  087F               	movf	btemp+1,w
  2805     0313  07F3               	addwf	strlen@s,f
  2806     0314                     l1463:
  2807     0314  0873               	movf	strlen@s,w
  2808     0315  0084               	movwf	4
  2809     0316  120A  118A  200D  120A  118A  	fcall	stringdir
  2810     031B  3A00               	xorlw	0
  2811     031C  1D03               	skipz
  2812     031D  2B1F               	goto	u781
  2813     031E  2B20               	goto	u780
  2814     031F                     u781:
  2815     031F  2B10               	goto	l1461
  2816     0320                     u780:
  2817     0320                     l1465:
  2818     0320  0872               	movf	strlen@a,w
  2819     0321  0273               	subwf	strlen@s,w
  2820     0322  00F0               	movwf	?_strlen
  2821     0323  01F1               	clrf	?_strlen+1
  2822     0324  1BF0               	btfsc	?_strlen,7
  2823     0325  03F1               	decf	?_strlen+1,f
  2824     0326                     l879:
  2825     0326  0008               	return
  2826     0327                     __end_of_strlen:
  2827                           
  2828                           	psect	text18
  2829     0346                     __ptext18:	
  2830 ;; *************** function _strcpy *****************
  2831 ;; Defined at:
  2832 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  dest            2    0[COMMON] PTR unsigned char 
  2835 ;;		 -> __heap_hi(0), NULL(0), 
  2836 ;;  src             1    2[COMMON] PTR const unsigned char 
  2837 ;;		 -> STR_10(20), 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  d               2    5[COMMON] PTR unsigned char 
  2840 ;;		 -> __heap_hi(0), NULL(0), 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    0[COMMON] PTR unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         3       0       0       0       0
  2851 ;;      Locals:         2       0       0       0       0
  2852 ;;      Temps:          2       0       0       0       0
  2853 ;;      Totals:         7       0       0       0       0
  2854 ;;Total ram usage:        7 bytes
  2855 ;; Hardware stack levels used: 2
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_concatenate
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863     0346                     _strcpy:	
  2864                           ;psect for function _strcpy
  2865                           
  2866     0346                     l1521:	
  2867                           ;incstack = 0
  2868                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2869                           
  2870     0346  0870               	movf	strcpy@dest,w
  2871     0347  00F5               	movwf	strcpy@d
  2872     0348  0871               	movf	strcpy@dest+1,w
  2873     0349  00F6               	movwf	strcpy@d+1
  2874     034A                     l1523:
  2875     034A  3001               	movlw	1
  2876     034B  07F2               	addwf	strcpy@src,f
  2877     034C  30FF               	movlw	-1
  2878     034D  0772               	addwf	strcpy@src,w
  2879     034E  0084               	movwf	4
  2880     034F  120A  118A  200D  120A  118A  	fcall	stringdir
  2881     0354  00FF               	movwf	btemp+1
  2882     0355  0876               	movf	strcpy@d+1,w
  2883     0356  00F4               	movwf	??_strcpy+1
  2884     0357  0875               	movf	strcpy@d,w
  2885     0358  00F3               	movwf	??_strcpy
  2886     0359  0AF5               	incf	strcpy@d,f
  2887     035A  1903               	skipnz
  2888     035B  0AF6               	incf	strcpy@d+1,f
  2889     035C  0873               	movf	??_strcpy,w
  2890     035D  0084               	movwf	4
  2891     035E  1783               	bsf	3,7
  2892     035F  1C74               	btfss	??_strcpy+1,0
  2893     0360  1383               	bcf	3,7
  2894     0361  087F               	movf	btemp+1,w
  2895     0362  0080               	movwf	0
  2896     0363  0800               	movf	0,w
  2897     0364  1D03               	btfss	3,2
  2898     0365  2B67               	goto	u861
  2899     0366  2B68               	goto	u860
  2900     0367                     u861:
  2901     0367  2B4A               	goto	l1523
  2902     0368                     u860:
  2903     0368                     l873:
  2904     0368  0008               	return
  2905     0369                     __end_of_strcpy:
  2906                           
  2907                           	psect	text19
  2908     0645                     __ptext19:	
  2909 ;; *************** function _malloc *****************
  2910 ;; Defined at:
  2911 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_malloc.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  n               2    0[BANK0 ] unsigned int 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  sz              2    6[BANK0 ] PTR unsigned int 
  2916 ;;		 -> __heap_hi(0), NULL(0), 
  2917 ;;  new             2   12[BANK0 ] PTR unsigned char 
  2918 ;;		 -> __heap_hi(0), NULL(0), 
  2919 ;;  m               2    4[BANK0 ] unsigned int 
  2920 ;;  p               2   10[BANK0 ] PTR void 
  2921 ;;		 -> __heap_hi(0), NULL(0), 
  2922 ;;  size            2    8[BANK0 ] unsigned int 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2    0[BANK0 ] PTR void 
  2925 ;; Registers used:
  2926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       2       0       0       0
  2933 ;;      Locals:         0      10       0       0       0
  2934 ;;      Temps:          0       2       0       0       0
  2935 ;;      Totals:         0      14       0       0       0
  2936 ;;Total ram usage:       14 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 1
  2939 ;; This function calls:
  2940 ;;		___expand_heap
  2941 ;;		___simple_search_fl
  2942 ;; This function is called by:
  2943 ;;		_concatenate
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947     0645                     _malloc:	
  2948                           ;psect for function _malloc
  2949                           
  2950     0645                     l1469:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2953                           
  2954     0645  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0646  1303               	bcf	3,6	;RP1=0, select bank0
  2956     0647  01A8               	clrf	malloc@size
  2957     0648  01A9               	clrf	malloc@size+1
  2958     0649                     l1471:
  2959     0649  0820               	movf	malloc@n,w
  2960     064A  0421               	iorwf	malloc@n+1,w
  2961     064B  1D03               	btfss	3,2
  2962     064C  2E4E               	goto	u791
  2963     064D  2E4F               	goto	u790
  2964     064E                     u791:
  2965     064E  2E55               	goto	l812
  2966     064F                     u790:
  2967     064F                     l1473:
  2968     064F  3001               	movlw	1
  2969     0650  07A0               	addwf	malloc@n,f
  2970     0651  1803               	skipnc
  2971     0652  0AA1               	incf	malloc@n+1,f
  2972     0653  3000               	movlw	0
  2973     0654  07A1               	addwf	malloc@n+1,f
  2974     0655                     l812:
  2975     0655  3000               	movlw	0
  2976     0656  0221               	subwf	malloc@n+1,w
  2977     0657  3002               	movlw	2
  2978     0658  1903               	skipnz
  2979     0659  0220               	subwf	malloc@n,w
  2980     065A  1803               	skipnc
  2981     065B  2E5D               	goto	u801
  2982     065C  2E5E               	goto	u800
  2983     065D                     u801:
  2984     065D  2E63               	goto	l1477
  2985     065E                     u800:
  2986     065E                     l1475:
  2987     065E  3002               	movlw	2
  2988     065F  00A0               	movwf	malloc@n
  2989     0660  3000               	movlw	0
  2990     0661  00A1               	movwf	malloc@n+1
  2991     0662  2E79               	goto	l1485
  2992     0663                     l1477:
  2993     0663  0821               	movf	malloc@n+1,w
  2994     0664  00A3               	movwf	??_malloc+1
  2995     0665  0820               	movf	malloc@n,w
  2996     0666  00A2               	movwf	??_malloc
  2997     0667  09A2               	comf	??_malloc,f
  2998     0668  09A3               	comf	??_malloc+1,f
  2999     0669  3000               	movlw	0
  3000     066A  0223               	subwf	??_malloc+1,w
  3001     066B  3002               	movlw	2
  3002     066C  1903               	skipnz
  3003     066D  0222               	subwf	??_malloc,w
  3004     066E  1803               	skipnc
  3005     066F  2E71               	goto	u811
  3006     0670  2E72               	goto	u810
  3007     0671                     u811:
  3008     0671  2E79               	goto	l1485
  3009     0672                     u810:
  3010     0672                     l1479:
  3011     0672  300C               	movlw	12
  3012     0673  00D7               	movwf	_errno
  3013     0674  3000               	movlw	0
  3014     0675  00D8               	movwf	_errno+1
  3015     0676                     l1481:
  3016     0676  01A0               	clrf	?_malloc
  3017     0677  01A1               	clrf	?_malloc+1
  3018     0678  2EFE               	goto	l816
  3019     0679                     l1485:
  3020     0679                     l1487:
  3021     0679  0821               	movf	malloc@n+1,w
  3022     067A  00F1               	movwf	___simple_search_fl@n+1
  3023     067B  0820               	movf	malloc@n,w
  3024     067C  00F0               	movwf	___simple_search_fl@n
  3025     067D  120A  118A  26FF  120A  118A  	fcall	___simple_search_fl
  3026     0682  1283               	bcf	3,5	;RP0=0, select bank0
  3027     0683  1303               	bcf	3,6	;RP1=0, select bank0
  3028     0684  00AA               	movwf	malloc@p
  3029     0685  3000               	movlw	0
  3030     0686  00AB               	movwf	malloc@p+1
  3031     0687                     l1489:
  3032     0687  082A               	movf	malloc@p,w
  3033     0688  042B               	iorwf	malloc@p+1,w
  3034     0689  1D03               	btfss	3,2
  3035     068A  2E8C               	goto	u821
  3036     068B  2E8D               	goto	u820
  3037     068C                     u821:
  3038     068C  2EFA               	goto	l1517
  3039     068D                     u820:
  3040     068D                     l1491:
  3041     068D  0855               	movf	malloc@cur,w
  3042     068E  0253               	subwf	malloc@end,w
  3043     068F  00A2               	movwf	??_malloc
  3044     0690  0856               	movf	malloc@cur+1,w
  3045     0691  1C03               	skipc
  3046     0692  0A56               	incf	malloc@cur+1,w
  3047     0693  0254               	subwf	malloc@end+1,w
  3048     0694  00A3               	movwf	??_malloc+1
  3049     0695  0821               	movf	malloc@n+1,w
  3050     0696  0223               	subwf	??_malloc+1,w
  3051     0697  1D03               	skipz
  3052     0698  2E9B               	goto	u835
  3053     0699  0820               	movf	malloc@n,w
  3054     069A  0222               	subwf	??_malloc,w
  3055     069B                     u835:
  3056     069B  1803               	skipnc
  3057     069C  2E9E               	goto	u831
  3058     069D  2E9F               	goto	u830
  3059     069E                     u831:
  3060     069E  2ED0               	goto	l818
  3061     069F                     u830:
  3062     069F                     l1493:
  3063     069F  0820               	movf	malloc@n,w
  3064     06A0  3E02               	addlw	2
  3065     06A1  00A4               	movwf	malloc@m
  3066     06A2  0821               	movf	malloc@n+1,w
  3067     06A3  1803               	skipnc
  3068     06A4  3E01               	addlw	1
  3069     06A5  3E00               	addlw	0
  3070     06A6  00A5               	movwf	malloc@m+1
  3071     06A7                     l1495:
  3072     06A7  3024               	movlw	(low (malloc@m| 0))& (0+255)
  3073     06A8  120A  118A  243F  120A  118A  	fcall	___expand_heap
  3074     06AD  0870               	movf	?___expand_heap,w
  3075     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3076     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3077     06B0  00AC               	movwf	malloc@new
  3078     06B1  0871               	movf	?___expand_heap+1,w
  3079     06B2  00AD               	movwf	malloc@new+1
  3080     06B3                     l1497:
  3081     06B3  082C               	movf	malloc@new,w
  3082     06B4  042D               	iorwf	malloc@new+1,w
  3083     06B5  1D03               	btfss	3,2
  3084     06B6  2EB8               	goto	u841
  3085     06B7  2EB9               	goto	u840
  3086     06B8                     u841:
  3087     06B8  2EBA               	goto	l1503
  3088     06B9                     u840:
  3089     06B9  2E76               	goto	l1481
  3090     06BA                     l1503:
  3091     06BA  0854               	movf	malloc@end+1,w
  3092     06BB  062D               	xorwf	malloc@new+1,w
  3093     06BC  1D03               	skipz
  3094     06BD  2EC0               	goto	u855
  3095     06BE  0853               	movf	malloc@end,w
  3096     06BF  062C               	xorwf	malloc@new,w
  3097     06C0                     u855:
  3098     06C0  1903               	skipnz
  3099     06C1  2EC3               	goto	u851
  3100     06C2  2EC4               	goto	u850
  3101     06C3                     u851:
  3102     06C3  2EC8               	goto	l820
  3103     06C4                     u850:
  3104     06C4                     l1505:
  3105     06C4  082C               	movf	malloc@new,w
  3106     06C5  00D5               	movwf	malloc@cur
  3107     06C6  082D               	movf	malloc@new+1,w
  3108     06C7  00D6               	movwf	malloc@cur+1
  3109     06C8                     l820:
  3110     06C8  0824               	movf	malloc@m,w
  3111     06C9  072C               	addwf	malloc@new,w
  3112     06CA  00D3               	movwf	malloc@end
  3113     06CB  0825               	movf	malloc@m+1,w
  3114     06CC  1803               	skipnc
  3115     06CD  0A25               	incf	malloc@m+1,w
  3116     06CE  072D               	addwf	malloc@new+1,w
  3117     06CF  00D4               	movwf	malloc@end+1
  3118     06D0                     l818:
  3119     06D0  0855               	movf	malloc@cur,w
  3120     06D1  00AA               	movwf	malloc@p
  3121     06D2  0856               	movf	malloc@cur+1,w
  3122     06D3  00AB               	movwf	malloc@p+1
  3123     06D4                     l1507:
  3124     06D4  082A               	movf	malloc@p,w
  3125     06D5  00A6               	movwf	malloc@sz
  3126     06D6  082B               	movf	malloc@p+1,w
  3127     06D7  00A7               	movwf	malloc@sz+1
  3128     06D8                     l1509:
  3129     06D8  0826               	movf	malloc@sz,w
  3130     06D9  0084               	movwf	4
  3131     06DA  1783               	bsf	3,7
  3132     06DB  1C27               	btfss	malloc@sz+1,0
  3133     06DC  1383               	bcf	3,7
  3134     06DD  0820               	movf	malloc@n,w
  3135     06DE  0080               	movwf	0
  3136     06DF  0A84               	incf	4,f
  3137     06E0  0821               	movf	malloc@n+1,w
  3138     06E1  0080               	movwf	0
  3139     06E2                     l1511:
  3140     06E2  3002               	movlw	2
  3141     06E3  07A6               	addwf	malloc@sz,f
  3142     06E4  1803               	skipnc
  3143     06E5  0AA7               	incf	malloc@sz+1,f
  3144     06E6  3000               	movlw	0
  3145     06E7  07A7               	addwf	malloc@sz+1,f
  3146     06E8                     l1513:
  3147     06E8  0826               	movf	malloc@sz,w
  3148     06E9  00AA               	movwf	malloc@p
  3149     06EA  0827               	movf	malloc@sz+1,w
  3150     06EB  00AB               	movwf	malloc@p+1
  3151     06EC                     l1515:
  3152     06EC  0820               	movf	malloc@n,w
  3153     06ED  3E02               	addlw	2
  3154     06EE  00A2               	movwf	??_malloc
  3155     06EF  0821               	movf	malloc@n+1,w
  3156     06F0  1803               	skipnc
  3157     06F1  3E01               	addlw	1
  3158     06F2  3E00               	addlw	0
  3159     06F3  00A3               	movwf	??_malloc+1
  3160     06F4  0822               	movf	??_malloc,w
  3161     06F5  07D5               	addwf	malloc@cur,f
  3162     06F6  1803               	skipnc
  3163     06F7  0AD6               	incf	malloc@cur+1,f
  3164     06F8  0823               	movf	??_malloc+1,w
  3165     06F9  07D6               	addwf	malloc@cur+1,f
  3166     06FA                     l1517:
  3167     06FA  082A               	movf	malloc@p,w
  3168     06FB  00A0               	movwf	?_malloc
  3169     06FC  082B               	movf	malloc@p+1,w
  3170     06FD  00A1               	movwf	?_malloc+1
  3171     06FE                     l816:
  3172     06FE  0008               	return
  3173     06FF                     __end_of_malloc:
  3174                           
  3175                           	psect	text20
  3176     06FF                     __ptext20:	
  3177 ;; *************** function ___simple_search_fl *****************
  3178 ;; Defined at:
  3179 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lite_free.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  n               2    0[COMMON] unsigned int 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  remaining_si    2    6[COMMON] unsigned int 
  3184 ;;  split           1    9[COMMON] PTR struct chunk
  3185 ;;		 -> NULL(0), 
  3186 ;;  next            1   11[COMMON] PTR struct chunk
  3187 ;;		 -> NULL(0), 
  3188 ;;  best            1   13[COMMON] PTR struct chunk
  3189 ;;		 -> NULL(0), 
  3190 ;;  c               1   12[COMMON] PTR struct chunk
  3191 ;;		 -> NULL(0), 
  3192 ;;  last            1   10[COMMON] PTR struct chunk
  3193 ;;		 -> NULL(0), 
  3194 ;;  best_last       1    8[COMMON] PTR struct chunk
  3195 ;;		 -> NULL(0), 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      PTR void 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         2       0       0       0       0
  3206 ;;      Locals:         8       0       0       0       0
  3207 ;;      Temps:          4       0       0       0       0
  3208 ;;      Totals:        14       0       0       0       0
  3209 ;;Total ram usage:       14 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_malloc
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218     06FF                     ___simple_search_fl:	
  3219                           ;psect for function ___simple_search_fl
  3220                           
  3221     06FF                     l1351:	
  3222                           ;incstack = 0
  3223                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0+btemp+1]
  3224                           
  3225     06FF  01FD               	clrf	___simple_search_fl@best
  3226     0700  01F8               	clrf	___simple_search_fl@best_last
  3227     0701  01FA               	clrf	___simple_search_fl@last
  3228     0702                     l1353:
  3229     0702  1283               	bcf	3,5	;RP0=0, select bank0
  3230     0703  1303               	bcf	3,6	;RP1=0, select bank0
  3231     0704  0859               	movf	___freelist,w
  3232     0705  1D03               	btfss	3,2
  3233     0706  2F08               	goto	u631
  3234     0707  2F09               	goto	u630
  3235     0708                     u631:
  3236     0708  2F0B               	goto	l1359
  3237     0709                     u630:
  3238     0709                     l1355:
  3239     0709  3000               	movlw	0
  3240     070A  2FE0               	goto	l845
  3241     070B                     l1359:
  3242     070B  0859               	movf	___freelist,w
  3243     070C  00FC               	movwf	___simple_search_fl@c
  3244     070D  2F74               	goto	l1385
  3245     070E                     l1361:
  3246     070E  087C               	movf	___simple_search_fl@c,w
  3247     070F  0084               	movwf	4
  3248     0710  1383               	bcf	3,7	;select IRP bank0
  3249     0711  0800               	movf	0,w
  3250     0712  00F2               	movwf	??___simple_search_fl
  3251     0713  0A84               	incf	4,f
  3252     0714  0800               	movf	0,w
  3253     0715  00F3               	movwf	??___simple_search_fl+1
  3254     0716  0871               	movf	___simple_search_fl@n+1,w
  3255     0717  0673               	xorwf	??___simple_search_fl+1,w
  3256     0718  1D03               	skipz
  3257     0719  2F1C               	goto	u645
  3258     071A  0870               	movf	___simple_search_fl@n,w
  3259     071B  0672               	xorwf	??___simple_search_fl,w
  3260     071C                     u645:
  3261     071C  1D03               	skipz
  3262     071D  2F1F               	goto	u641
  3263     071E  2F20               	goto	u640
  3264     071F                     u641:
  3265     071F  2F3A               	goto	l1373
  3266     0720                     u640:
  3267     0720                     l1363:
  3268     0720  087A               	movf	___simple_search_fl@last,w
  3269     0721  1903               	btfsc	3,2
  3270     0722  2F24               	goto	u651
  3271     0723  2F25               	goto	u650
  3272     0724                     u651:
  3273     0724  2F30               	goto	l1367
  3274     0725                     u650:
  3275     0725                     l1365:
  3276     0725  087C               	movf	___simple_search_fl@c,w
  3277     0726  3E02               	addlw	2
  3278     0727  0084               	movwf	4
  3279     0728  0800               	movf	0,w
  3280     0729  00FF               	movwf	btemp+1
  3281     072A  087A               	movf	___simple_search_fl@last,w
  3282     072B  3E02               	addlw	2
  3283     072C  0084               	movwf	4
  3284     072D  087F               	movf	btemp+1,w
  3285     072E  0080               	movwf	0
  3286     072F  2F37               	goto	l1369
  3287     0730                     l1367:
  3288     0730  087C               	movf	___simple_search_fl@c,w
  3289     0731  3E02               	addlw	2
  3290     0732  0084               	movwf	4
  3291     0733  0800               	movf	0,w
  3292     0734  1283               	bcf	3,5	;RP0=0, select bank0
  3293     0735  1303               	bcf	3,6	;RP1=0, select bank0
  3294     0736  00D9               	movwf	___freelist
  3295     0737                     l1369:
  3296     0737  087C               	movf	___simple_search_fl@c,w
  3297     0738  3E02               	addlw	2
  3298     0739  2FE0               	goto	l845
  3299     073A                     l1373:
  3300     073A  087C               	movf	___simple_search_fl@c,w
  3301     073B  0084               	movwf	4
  3302     073C  0800               	movf	0,w
  3303     073D  00F2               	movwf	??___simple_search_fl
  3304     073E  0A84               	incf	4,f
  3305     073F  0800               	movf	0,w
  3306     0740  00F3               	movwf	??___simple_search_fl+1
  3307     0741  0873               	movf	??___simple_search_fl+1,w
  3308     0742  0271               	subwf	___simple_search_fl@n+1,w
  3309     0743  1D03               	skipz
  3310     0744  2F47               	goto	u665
  3311     0745  0872               	movf	??___simple_search_fl,w
  3312     0746  0270               	subwf	___simple_search_fl@n,w
  3313     0747                     u665:
  3314     0747  1803               	skipnc
  3315     0748  2F4A               	goto	u661
  3316     0749  2F4B               	goto	u660
  3317     074A                     u661:
  3318     074A  2F6D               	goto	l853
  3319     074B                     u660:
  3320     074B                     l1375:
  3321     074B  087D               	movf	___simple_search_fl@best,w
  3322     074C  1903               	btfsc	3,2
  3323     074D  2F4F               	goto	u671
  3324     074E  2F50               	goto	u670
  3325     074F                     u671:
  3326     074F  2F69               	goto	l1381
  3327     0750                     u670:
  3328     0750                     l1377:
  3329     0750  087D               	movf	___simple_search_fl@best,w
  3330     0751  0084               	movwf	4
  3331     0752  0800               	movf	0,w
  3332     0753  00F2               	movwf	??___simple_search_fl
  3333     0754  0A84               	incf	4,f
  3334     0755  0800               	movf	0,w
  3335     0756  00F3               	movwf	??___simple_search_fl+1
  3336     0757  087C               	movf	___simple_search_fl@c,w
  3337     0758  0084               	movwf	4
  3338     0759  0800               	movf	0,w
  3339     075A  00F4               	movwf	??___simple_search_fl+2
  3340     075B  0A84               	incf	4,f
  3341     075C  0800               	movf	0,w
  3342     075D  00F5               	movwf	??___simple_search_fl+3
  3343     075E  0873               	movf	??___simple_search_fl+1,w
  3344     075F  0275               	subwf	??___simple_search_fl+3,w
  3345     0760  1D03               	skipz
  3346     0761  2F64               	goto	u685
  3347     0762  0872               	movf	??___simple_search_fl,w
  3348     0763  0274               	subwf	??___simple_search_fl+2,w
  3349     0764                     u685:
  3350     0764  1C03               	skipc
  3351     0765  2F67               	goto	u681
  3352     0766  2F68               	goto	u680
  3353     0767                     u681:
  3354     0767  2F69               	goto	l1381
  3355     0768                     u680:
  3356     0768  2F6D               	goto	l853
  3357     0769                     l1381:
  3358     0769  087C               	movf	___simple_search_fl@c,w
  3359     076A  00FD               	movwf	___simple_search_fl@best
  3360     076B  087A               	movf	___simple_search_fl@last,w
  3361     076C  00F8               	movwf	___simple_search_fl@best_last
  3362     076D                     l853:
  3363     076D  087C               	movf	___simple_search_fl@c,w
  3364     076E  00FA               	movwf	___simple_search_fl@last
  3365     076F                     l1383:
  3366     076F  087C               	movf	___simple_search_fl@c,w
  3367     0770  3E02               	addlw	2
  3368     0771  0084               	movwf	4
  3369     0772  0800               	movf	0,w
  3370     0773  00FC               	movwf	___simple_search_fl@c
  3371     0774                     l1385:
  3372     0774  087C               	movf	___simple_search_fl@c,w
  3373     0775  1D03               	btfss	3,2
  3374     0776  2F78               	goto	u691
  3375     0777  2F79               	goto	u690
  3376     0778                     u691:
  3377     0778  2F0E               	goto	l1361
  3378     0779                     u690:
  3379     0779                     l1387:
  3380     0779  087D               	movf	___simple_search_fl@best,w
  3381     077A  1903               	btfsc	3,2
  3382     077B  2F7D               	goto	u701
  3383     077C  2F7E               	goto	u700
  3384     077D                     u701:
  3385     077D  2F09               	goto	l1355
  3386     077E                     u700:
  3387     077E                     l1389:
  3388     077E  087D               	movf	___simple_search_fl@best,w
  3389     077F  3E02               	addlw	2
  3390     0780  0084               	movwf	4
  3391     0781  1383               	bcf	3,7	;select IRP bank0
  3392     0782  0800               	movf	0,w
  3393     0783  00FB               	movwf	___simple_search_fl@next
  3394     0784  087D               	movf	___simple_search_fl@best,w
  3395     0785  0084               	movwf	4
  3396     0786  0800               	movf	0,w
  3397     0787  00F2               	movwf	??___simple_search_fl
  3398     0788  0A84               	incf	4,f
  3399     0789  0800               	movf	0,w
  3400     078A  00F3               	movwf	??___simple_search_fl+1
  3401     078B  0870               	movf	___simple_search_fl@n,w
  3402     078C  0272               	subwf	??___simple_search_fl,w
  3403     078D  00F4               	movwf	??___simple_search_fl+2
  3404     078E  0871               	movf	___simple_search_fl@n+1,w
  3405     078F  1C03               	skipc
  3406     0790  0A71               	incf	___simple_search_fl@n+1,w
  3407     0791  0273               	subwf	??___simple_search_fl+1,w
  3408     0792  00F5               	movwf	??___simple_search_fl+3
  3409     0793  3000               	movlw	0
  3410     0794  0275               	subwf	??___simple_search_fl+3,w
  3411     0795  3005               	movlw	5
  3412     0796  1903               	skipnz
  3413     0797  0274               	subwf	??___simple_search_fl+2,w
  3414     0798  1C03               	skipc
  3415     0799  2F9B               	goto	u711
  3416     079A  2F9C               	goto	u710
  3417     079B                     u711:
  3418     079B  2FCE               	goto	l1401
  3419     079C                     u710:
  3420     079C                     l1391:
  3421     079C  087D               	movf	___simple_search_fl@best,w
  3422     079D  0084               	movwf	4
  3423     079E  0800               	movf	0,w
  3424     079F  00F2               	movwf	??___simple_search_fl
  3425     07A0  0A84               	incf	4,f
  3426     07A1  0800               	movf	0,w
  3427     07A2  00F3               	movwf	??___simple_search_fl+1
  3428     07A3  0870               	movf	___simple_search_fl@n,w
  3429     07A4  0272               	subwf	??___simple_search_fl,w
  3430     07A5  00F4               	movwf	??___simple_search_fl+2
  3431     07A6  0871               	movf	___simple_search_fl@n+1,w
  3432     07A7  1C03               	skipc
  3433     07A8  0A71               	incf	___simple_search_fl@n+1,w
  3434     07A9  0273               	subwf	??___simple_search_fl+1,w
  3435     07AA  00F5               	movwf	??___simple_search_fl+3
  3436     07AB  0874               	movf	??___simple_search_fl+2,w
  3437     07AC  3EFE               	addlw	254
  3438     07AD  00F6               	movwf	___simple_search_fl@remaining_size
  3439     07AE  0875               	movf	??___simple_search_fl+3,w
  3440     07AF  1803               	skipnc
  3441     07B0  3E01               	addlw	1
  3442     07B1  3EFF               	addlw	255
  3443     07B2  00F7               	movwf	___simple_search_fl@remaining_size+1
  3444     07B3                     l1393:
  3445     07B3  087D               	movf	___simple_search_fl@best,w
  3446     07B4  0084               	movwf	4
  3447     07B5  0870               	movf	___simple_search_fl@n,w
  3448     07B6  0080               	movwf	0
  3449     07B7  0A84               	incf	4,f
  3450     07B8  0871               	movf	___simple_search_fl@n+1,w
  3451     07B9  0080               	movwf	0
  3452     07BA                     l1395:
  3453     07BA  087D               	movf	___simple_search_fl@best,w
  3454     07BB  0084               	movwf	4
  3455     07BC  0800               	movf	0,w
  3456     07BD  077D               	addwf	___simple_search_fl@best,w
  3457     07BE  3E02               	addlw	2
  3458     07BF  00F9               	movwf	___simple_search_fl@split
  3459     07C0  0879               	movf	___simple_search_fl@split,w
  3460     07C1  0084               	movwf	4
  3461     07C2  0876               	movf	___simple_search_fl@remaining_size,w
  3462     07C3  0080               	movwf	0
  3463     07C4  0A84               	incf	4,f
  3464     07C5  0877               	movf	___simple_search_fl@remaining_size+1,w
  3465     07C6  0080               	movwf	0
  3466     07C7                     l1397:
  3467     07C7  0879               	movf	___simple_search_fl@split,w
  3468     07C8  3E02               	addlw	2
  3469     07C9  0084               	movwf	4
  3470     07CA  087B               	movf	___simple_search_fl@next,w
  3471     07CB  0080               	movwf	0
  3472     07CC                     l1399:
  3473     07CC  0879               	movf	___simple_search_fl@split,w
  3474     07CD  00FB               	movwf	___simple_search_fl@next
  3475     07CE                     l1401:
  3476     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3477     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3478     07D0  0859               	movf	___freelist,w
  3479     07D1  067D               	xorwf	___simple_search_fl@best,w
  3480     07D2  1D03               	skipz
  3481     07D3  2FD5               	goto	u721
  3482     07D4  2FD6               	goto	u720
  3483     07D5                     u721:
  3484     07D5  2FD9               	goto	l1405
  3485     07D6                     u720:
  3486     07D6                     l1403:
  3487     07D6  087B               	movf	___simple_search_fl@next,w
  3488     07D7  00D9               	movwf	___freelist
  3489     07D8  2FDE               	goto	l1407
  3490     07D9                     l1405:
  3491     07D9  0878               	movf	___simple_search_fl@best_last,w
  3492     07DA  3E02               	addlw	2
  3493     07DB  0084               	movwf	4
  3494     07DC  087B               	movf	___simple_search_fl@next,w
  3495     07DD  0080               	movwf	0
  3496     07DE                     l1407:
  3497     07DE  087D               	movf	___simple_search_fl@best,w
  3498     07DF  3E02               	addlw	2
  3499     07E0                     l845:
  3500     07E0  0008               	return
  3501     07E1                     __end_of___simple_search_fl:
  3502                           
  3503                           	psect	text21
  3504     043F                     __ptext21:	
  3505 ;; *************** function ___expand_heap *****************
  3506 ;; Defined at:
  3507 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\expand_heap.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  pn              1    wreg     PTR unsigned int 
  3510 ;;		 -> malloc@m(2), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  pn              1    0[COMMON] PTR unsigned int 
  3513 ;;		 -> malloc@m(2), 
  3514 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  3515 ;;		 -> __heap_hi(0), NULL(0), 
  3516 ;;  n               2    1[COMMON] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2  803[None  ] PTR void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         0       0       0       0       0
  3527 ;;      Locals:         5       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0
  3529 ;;      Totals:         5       0       0       0       0
  3530 ;;Total ram usage:        5 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_malloc
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539     043F                     ___expand_heap:	
  3540                           ;psect for function ___expand_heap
  3541                           
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  3545                           ;___expand_heap@pn stored from wreg
  3546     043F  00F0               	movwf	___expand_heap@pn
  3547     0440                     l1415:
  3548     0440  0870               	movf	___expand_heap@pn,w
  3549     0441  0084               	movwf	4
  3550     0442  1383               	bcf	3,7	;select IRP bank0
  3551     0443  0800               	movf	0,w
  3552     0444  00F1               	movwf	___expand_heap@n
  3553     0445  0A84               	incf	4,f
  3554     0446  0800               	movf	0,w
  3555     0447  00F2               	movwf	___expand_heap@n+1
  3556     0448                     l1417:
  3557     0448  1283               	bcf	3,5	;RP0=0, select bank0
  3558     0449  1303               	bcf	3,6	;RP1=0, select bank0
  3559     044A  0851               	movf	_brkp,w
  3560     044B  0452               	iorwf	_brkp+1,w
  3561     044C  1D03               	btfss	3,2
  3562     044D  2C4F               	goto	u731
  3563     044E  2C50               	goto	u730
  3564     044F                     u731:
  3565     044F  2C54               	goto	l834
  3566     0450                     u730:
  3567     0450                     l1419:
  3568     0450  3070               	movlw	low ___heap_hi
  3569     0451  00D1               	movwf	_brkp
  3570     0452  3001               	movlw	high ___heap_hi
  3571     0453  00D2               	movwf	_brkp+1
  3572     0454                     l834:
  3573     0454  3000               	movlw	0
  3574     0455  0272               	subwf	___expand_heap@n+1,w
  3575     0456  3004               	movlw	4
  3576     0457  1903               	skipnz
  3577     0458  0271               	subwf	___expand_heap@n,w
  3578     0459  1803               	skipnc
  3579     045A  2C5C               	goto	u741
  3580     045B  2C5D               	goto	u740
  3581     045C                     u741:
  3582     045C  2C61               	goto	l1423
  3583     045D                     u740:
  3584     045D                     l1421:
  3585     045D  3004               	movlw	4
  3586     045E  00F1               	movwf	___expand_heap@n
  3587     045F  3000               	movlw	0
  3588     0460  00F2               	movwf	___expand_heap@n+1
  3589     0461                     l1423:
  3590     0461  0871               	movf	___expand_heap@n,w
  3591     0462  0251               	subwf	_brkp,w
  3592     0463  00F3               	movwf	___expand_heap@new_brkp
  3593     0464  0872               	movf	___expand_heap@n+1,w
  3594     0465  1C03               	skipc
  3595     0466  0A72               	incf	___expand_heap@n+1,w
  3596     0467  0252               	subwf	_brkp+1,w
  3597     0468  00F4               	movwf	___expand_heap@new_brkp+1
  3598     0469                     l1425:
  3599     0469  3001               	movlw	high ___heap_lo
  3600     046A  0274               	subwf	___expand_heap@new_brkp+1,w
  3601     046B  3010               	movlw	low ___heap_lo
  3602     046C  1903               	skipnz
  3603     046D  0273               	subwf	___expand_heap@new_brkp,w
  3604     046E  1C03               	skipc
  3605     046F  2C71               	goto	u751
  3606     0470  2C72               	goto	u750
  3607     0471                     u751:
  3608     0471  2C7C               	goto	l1429
  3609     0472                     u750:
  3610     0472                     l1427:
  3611     0472  0852               	movf	_brkp+1,w
  3612     0473  0274               	subwf	___expand_heap@new_brkp+1,w
  3613     0474  1D03               	skipz
  3614     0475  2C78               	goto	u765
  3615     0476  0851               	movf	_brkp,w
  3616     0477  0273               	subwf	___expand_heap@new_brkp,w
  3617     0478                     u765:
  3618     0478  1C03               	skipc
  3619     0479  2C7B               	goto	u761
  3620     047A  2C7C               	goto	u760
  3621     047B                     u761:
  3622     047B  2C83               	goto	l1435
  3623     047C                     u760:
  3624     047C                     l1429:
  3625     047C  300C               	movlw	12
  3626     047D  00D7               	movwf	_errno
  3627     047E  3000               	movlw	0
  3628     047F  00D8               	movwf	_errno+1
  3629     0480                     l1431:
  3630     0480  01F0               	clrf	?___expand_heap
  3631     0481  01F1               	clrf	?___expand_heap+1
  3632     0482  2C8B               	goto	l839
  3633     0483                     l1435:
  3634     0483  0873               	movf	___expand_heap@new_brkp,w
  3635     0484  00D1               	movwf	_brkp
  3636     0485  0874               	movf	___expand_heap@new_brkp+1,w
  3637     0486  00D2               	movwf	_brkp+1
  3638     0487  0851               	movf	_brkp,w
  3639     0488  00F0               	movwf	?___expand_heap
  3640     0489  0852               	movf	_brkp+1,w
  3641     048A  00F1               	movwf	?___expand_heap+1
  3642     048B                     l839:
  3643     048B  0008               	return
  3644     048C                     __end_of___expand_heap:
  3645                           
  3646                           	psect	text22
  3647     03C1                     __ptext22:	
  3648 ;; *************** function _LCD_Write_String *****************
  3649 ;; Defined at:
  3650 ;;		line 9 in file "LCD.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  Str             2   22[BANK0 ] PTR unsigned char 
  3653 ;;		 -> __heap_hi(0), NULL(0), STR_11(42), STR_9(16), 
  3654 ;;		 -> STR_7(21), STR_5(19), STR_4(25), STR_3(17), 
  3655 ;;		 -> STR_2(51), 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  i               2   24[BANK0 ] int 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       2       0       0       0
  3668 ;;      Locals:         0       2       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         0       4       0       0       0
  3671 ;;Total ram usage:        4 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 1
  3674 ;; This function calls:
  3675 ;;		_LCD_write_char
  3676 ;; This function is called by:
  3677 ;;		_settings
  3678 ;;		_main_menu
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682     03C1                     _LCD_Write_String:	
  3683                           ;psect for function _LCD_Write_String
  3684                           
  3685     03C1                     l1549:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3688                           
  3689                           
  3690                           ;LCD.c: 9: void LCD_Write_String(char* Str);LCD.c: 10: {;LCD.c: 11:   for(int i=0; Str[i
      +                          ]!='\0'; i++)
  3691     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3692     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  3693     03C3  01B8               	clrf	LCD_Write_String@i
  3694     03C4  01B9               	clrf	LCD_Write_String@i+1
  3695     03C5  2BE0               	goto	l1555
  3696     03C6                     l1551:
  3697                           
  3698                           ;LCD.c: 12:     LCD_write_char(Str[i]);
  3699     03C6  0838               	movf	LCD_Write_String@i,w
  3700     03C7  0736               	addwf	LCD_Write_String@Str,w
  3701     03C8  0084               	movwf	4
  3702     03C9  0839               	movf	LCD_Write_String@i+1,w
  3703     03CA  1803               	skipnc
  3704     03CB  0A39               	incf	LCD_Write_String@i+1,w
  3705     03CC  0737               	addwf	LCD_Write_String@Str+1,w
  3706     03CD  00FF               	movwf	btemp+1
  3707     03CE  120A  118A  2003  120A  118A  	fcall	stringtab
  3708     03D3  120A  118A  22B6  120A  118A  	fcall	_LCD_write_char
  3709     03D8                     l1553:
  3710     03D8  3001               	movlw	1
  3711     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3712     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3713     03DB  07B8               	addwf	LCD_Write_String@i,f
  3714     03DC  1803               	skipnc
  3715     03DD  0AB9               	incf	LCD_Write_String@i+1,f
  3716     03DE  3000               	movlw	0
  3717     03DF  07B9               	addwf	LCD_Write_String@i+1,f
  3718     03E0                     l1555:
  3719     03E0  0838               	movf	LCD_Write_String@i,w
  3720     03E1  0736               	addwf	LCD_Write_String@Str,w
  3721     03E2  0084               	movwf	4
  3722     03E3  0839               	movf	LCD_Write_String@i+1,w
  3723     03E4  1803               	skipnc
  3724     03E5  0A39               	incf	LCD_Write_String@i+1,w
  3725     03E6  0737               	addwf	LCD_Write_String@Str+1,w
  3726     03E7  00FF               	movwf	btemp+1
  3727     03E8  120A  118A  2003  120A  118A  	fcall	stringtab
  3728     03ED  3A00               	xorlw	0
  3729     03EE  1D03               	skipz
  3730     03EF  2BF1               	goto	u891
  3731     03F0  2BF2               	goto	u890
  3732     03F1                     u891:
  3733     03F1  2BC6               	goto	l1551
  3734     03F2                     u890:
  3735     03F2                     l74:
  3736     03F2  0008               	return
  3737     03F3                     __end_of_LCD_Write_String:
  3738                           
  3739                           	psect	text23
  3740     02B6                     __ptext23:	
  3741 ;; *************** function _LCD_write_char *****************
  3742 ;; Defined at:
  3743 ;;		line 43 in file "LCD.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  ch              1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  ch              1    2[COMMON] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         1       0       0       0       0
  3759 ;;      Temps:          2       0       0       0       0
  3760 ;;      Totals:         3       0       0       0       0
  3761 ;;Total ram usage:        3 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_LCD_Write_String
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770     02B6                     _LCD_write_char:	
  3771                           ;psect for function _LCD_write_char
  3772                           
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in _LCD_write_char: [wreg]
  3776                           ;LCD_write_char@ch stored from wreg
  3777     02B6  00F2               	movwf	LCD_write_char@ch
  3778     02B7                     l1451:
  3779                           
  3780                           ;LCD.c: 43: void LCD_write_char(unsigned char ch);LCD.c: 44: {;LCD.c: 45:     PORTB = ch
      +                          ;
  3781     02B7  0872               	movf	LCD_write_char@ch,w
  3782     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3783     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  3784     02BA  0086               	movwf	6	;volatile
  3785     02BB                     l1453:
  3786                           
  3787                           ;LCD.c: 46:     RC5 = 1;
  3788     02BB  1687               	bsf	7,5	;volatile
  3789     02BC                     l1455:
  3790                           
  3791                           ;LCD.c: 47:     RC7 = 1;
  3792     02BC  1787               	bsf	7,7	;volatile
  3793                           
  3794                           ;LCD.c: 48:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3795     02BD  301A               	movlw	26
  3796     02BE  00F1               	movwf	??_LCD_write_char+1
  3797     02BF  30F8               	movlw	248
  3798     02C0  00F0               	movwf	??_LCD_write_char
  3799     02C1                     u1067:
  3800     02C1  0BF0               	decfsz	??_LCD_write_char,f
  3801     02C2  2AC1               	goto	u1067
  3802     02C3  0BF1               	decfsz	??_LCD_write_char+1,f
  3803     02C4  2AC1               	goto	u1067
  3804     02C5  0000               	nop
  3805     02C6                     l1457:
  3806                           
  3807                           ;LCD.c: 49:     RC7 = 0;
  3808     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3809     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3810     02C8  1387               	bcf	7,7	;volatile
  3811     02C9                     l89:
  3812     02C9  0008               	return
  3813     02CA                     __end_of_LCD_write_char:
  3814                           
  3815                           	psect	text24
  3816     0283                     __ptext24:	
  3817 ;; *************** function _boot *****************
  3818 ;; Defined at:
  3819 ;;		line 169 in file "firmware.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 1
  3840 ;; This function calls:
  3841 ;;		_boot_led_blink
  3842 ;;		_init_trisio
  3843 ;;		_initialize_SIM900A
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849     0283                     _boot:	
  3850                           ;psect for function _boot
  3851                           
  3852     0283                     l1253:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _boot: [wreg+status,2+status,0+pclath+cstack]
  3855                           
  3856                           
  3857                           ;firmware.c: 171:    initialize_SIM900A();
  3858     0283  120A  118A  22F4  120A  118A  	fcall	_initialize_SIM900A
  3859                           
  3860                           ;firmware.c: 172:    init_trisio();
  3861     0288  120A  118A  2246  120A  118A  	fcall	_init_trisio
  3862                           
  3863                           ;firmware.c: 173:    boot_led_blink();
  3864     028D  120A  118A  22DE  120A  118A  	fcall	_boot_led_blink
  3865     0292                     l197:
  3866     0292  0008               	return
  3867     0293                     __end_of_boot:
  3868                           
  3869                           	psect	text25
  3870     02F4                     __ptext25:	
  3871 ;; *************** function _initialize_SIM900A *****************
  3872 ;; Defined at:
  3873 ;;		line 6 in file "SIM900A.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_boot
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900     02F4                     _initialize_SIM900A:	
  3901                           ;psect for function _initialize_SIM900A
  3902                           
  3903     02F4                     l1227:	
  3904                           ;incstack = 0
  3905                           ; Regs used in _initialize_SIM900A: [wreg]
  3906                           
  3907                           
  3908                           ;SIM900A.c: 8:     TRISC6 = 0;
  3909     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3910     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3911     02F6  1307               	bcf	7,6	;volatile
  3912                           
  3913                           ;SIM900A.c: 9:     TRISC7 = 1;
  3914     02F7  1787               	bsf	7,7	;volatile
  3915     02F8                     l1229:
  3916                           
  3917                           ;SIM900A.c: 10:     SPBRG =((20000000/16)/9600)-1;
  3918     02F8  3081               	movlw	129
  3919     02F9  0099               	movwf	25	;volatile
  3920     02FA                     l1231:
  3921                           
  3922                           ;SIM900A.c: 11:     BRGH = 1;
  3923     02FA  1518               	bsf	24,2	;volatile
  3924     02FB                     l1233:
  3925                           
  3926                           ;SIM900A.c: 12:     SYNC = 0;
  3927     02FB  1218               	bcf	24,4	;volatile
  3928     02FC                     l1235:
  3929                           
  3930                           ;SIM900A.c: 13:     SPEN = 1;
  3931     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3932     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3933     02FE  1798               	bsf	24,7	;volatile
  3934     02FF                     l1237:
  3935                           
  3936                           ;SIM900A.c: 14:     TXEN=1;
  3937     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  3938     0300  1303               	bcf	3,6	;RP1=0, select bank1
  3939     0301  1698               	bsf	24,5	;volatile
  3940     0302                     l1239:
  3941                           
  3942                           ;SIM900A.c: 15:     CREN=1;
  3943     0302  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0303  1303               	bcf	3,6	;RP1=0, select bank0
  3945     0304  1618               	bsf	24,4	;volatile
  3946     0305                     l1241:
  3947                           
  3948                           ;SIM900A.c: 16:     TX9=0;
  3949     0305  1683               	bsf	3,5	;RP0=1, select bank1
  3950     0306  1303               	bcf	3,6	;RP1=0, select bank1
  3951     0307  1318               	bcf	24,6	;volatile
  3952     0308                     l1243:
  3953                           
  3954                           ;SIM900A.c: 17:     RX9=0;
  3955     0308  1283               	bcf	3,5	;RP0=0, select bank0
  3956     0309  1303               	bcf	3,6	;RP1=0, select bank0
  3957     030A  1318               	bcf	24,6	;volatile
  3958     030B                     l230:
  3959     030B  0008               	return
  3960     030C                     __end_of_initialize_SIM900A:
  3961                           
  3962                           	psect	text26
  3963     0246                     __ptext26:	
  3964 ;; *************** function _init_trisio *****************
  3965 ;; Defined at:
  3966 ;;		line 149 in file "firmware.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_boot
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993     0246                     _init_trisio:	
  3994                           ;psect for function _init_trisio
  3995                           
  3996     0246                     l1223:	
  3997                           ;incstack = 0
  3998                           ; Regs used in _init_trisio: [wreg+status,2]
  3999                           
  4000                           
  4001                           ;firmware.c: 152:     TRISD = 0b00001010;
  4002     0246  300A               	movlw	10
  4003     0247  1683               	bsf	3,5	;RP0=1, select bank1
  4004     0248  1303               	bcf	3,6	;RP1=0, select bank1
  4005     0249  0088               	movwf	8	;volatile
  4006     024A                     l1225:
  4007                           
  4008                           ;firmware.c: 153:     TRISB = 0b00000000;
  4009     024A  0186               	clrf	6	;volatile
  4010     024B                     l186:
  4011     024B  0008               	return
  4012     024C                     __end_of_init_trisio:
  4013                           
  4014                           	psect	text27
  4015     02DE                     __ptext27:	
  4016 ;; *************** function _boot_led_blink *****************
  4017 ;; Defined at:
  4018 ;;		line 54 in file "firmware.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4032 ;;      Params:         0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0
  4034 ;;      Temps:          3       0       0       0       0
  4035 ;;      Totals:         3       0       0       0       0
  4036 ;;Total ram usage:        3 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_boot
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     02DE                     _boot_led_blink:	
  4046                           ;psect for function _boot_led_blink
  4047                           
  4048     02DE                     l1169:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _boot_led_blink: [wreg]
  4051                           
  4052                           
  4053                           ;firmware.c: 56:     RB3 = 1;
  4054     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  4055     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  4056     02E0  1586               	bsf	6,3	;volatile
  4057                           
  4058                           ;firmware.c: 57:     RB4 = 1;
  4059     02E1  1606               	bsf	6,4	;volatile
  4060     02E2                     l1171:
  4061                           
  4062                           ;firmware.c: 58:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  4063     02E2  301A               	movlw	26
  4064     02E3  00F2               	movwf	??_boot_led_blink+2
  4065     02E4  305E               	movlw	94
  4066     02E5  00F1               	movwf	??_boot_led_blink+1
  4067     02E6  306E               	movlw	110
  4068     02E7  00F0               	movwf	??_boot_led_blink
  4069     02E8                     u1077:
  4070     02E8  0BF0               	decfsz	??_boot_led_blink,f
  4071     02E9  2AE8               	goto	u1077
  4072     02EA  0BF1               	decfsz	??_boot_led_blink+1,f
  4073     02EB  2AE8               	goto	u1077
  4074     02EC  0BF2               	decfsz	??_boot_led_blink+2,f
  4075     02ED  2AE8               	goto	u1077
  4076     02EE  0000               	nop
  4077     02EF                     l1173:
  4078                           
  4079                           ;firmware.c: 59:     RB3 = 0;
  4080     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4081     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4082     02F1  1186               	bcf	6,3	;volatile
  4083     02F2                     l1175:
  4084                           
  4085                           ;firmware.c: 60:     RB4 = 0;
  4086     02F2  1206               	bcf	6,4	;volatile
  4087     02F3                     l149:
  4088     02F3  0008               	return
  4089     02F4                     __end_of_boot_led_blink:
  4090     007E                     btemp	set	126	;btemp
  4091     007E                     wtemp0	set	126
  4092                           
  4093                           	psect	idloc
  4094                           
  4095                           ;Config register IDLOC0 @ 0x2000
  4096                           ;	unspecified, using default values
  4097     2000                     	org	8192
  4098     2000  3FFF               	dw	16383
  4099                           
  4100                           ;Config register IDLOC1 @ 0x2001
  4101                           ;	unspecified, using default values
  4102     2001                     	org	8193
  4103     2001  3FFF               	dw	16383
  4104                           
  4105                           ;Config register IDLOC2 @ 0x2002
  4106                           ;	unspecified, using default values
  4107     2002                     	org	8194
  4108     2002  3FFF               	dw	16383
  4109                           
  4110                           ;Config register IDLOC3 @ 0x2003
  4111                           ;	unspecified, using default values
  4112     2003                     	org	8195
  4113     2003  3FFF               	dw	16383
  4114                           
  4115                           	psect	config
  4116                           
  4117                           ;Config register CONFIG @ 0x2007
  4118                           ;	Oscillator Selection bits
  4119                           ;	FOSC = HS, HS oscillator
  4120                           ;	Watchdog Timer Enable bit
  4121                           ;	WDTE = OFF, WDT disabled
  4122                           ;	Power-up Timer Enable bit
  4123                           ;	PWRTE = OFF, PWRT disabled
  4124                           ;	Brown-out Reset Enable bit
  4125                           ;	BOREN = OFF, BOR disabled
  4126                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4127                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4128                           ;	Data EEPROM Memory Code Protection bit
  4129                           ;	CPD = OFF, Data EEPROM code protection off
  4130                           ;	Flash Program Memory Write Enable bits
  4131                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4132                           ;	In-Circuit Debugger Mode bit
  4133                           ;	DEBUG = 0x1, unprogrammed default
  4134                           ;	Flash Program Memory Code Protection bit
  4135                           ;	CP = OFF, Code protection off
  4136     2007                     	org	8199
  4137     2007  3F3A               	dw	16186

Data Sizes:
    Strings     232
    Constant    0
    Data        16
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    concatenate@result	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    concatenate@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), 

    concatenate@s2	PTR const unsigned char  size(1) Largest target is 0

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c$.$.$next	PTR struct chunk size(1) Largest target is 0

    free@c$.$next	PTR struct chunk size(1) Largest target is 0

    __freelist	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(1) Largest target is 0

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 51
		 -> __heap_hi(UNKNOWN), STR_11(CODE[42]), STR_2(CODE[51]), STR_3(CODE[17]), 
		 -> STR_4(CODE[25]), STR_5(CODE[19]), STR_7(CODE[21]), STR_9(CODE[16]), 
		 -> NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    read_keypad@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    S676$next	PTR struct chunk size(1) Largest target is 0

    save_phone@phone	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    settings@phone	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    settings@saved_number	PTR unsigned char  size(1) Largest target is 0

    _SIM900A_print@ptr	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best_last	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best_last$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@best_last$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@c	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@last	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@last$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@last$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@next	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@split	PTR struct chunk size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@split$.$.$next	PTR struct chunk size(1) Largest target is 0

    __simple_search_fl@split$.$next	PTR struct chunk size(1) Largest target is 0

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(1) Largest target is 0

    sp__concatenate	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__read_keypad	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__read_saved_phone	PTR unsigned char  size(1) Largest target is 0

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), 


Critical Paths under _main in COMMON

    _main_menu->_read_keypad
    _start->_blink_sensor_led
    _MakeCall->_BlinkMainLED
    __SIM900A_print->__SIM900A_putch
    _settings->_read_keypad
    _read_keypad->_read_keypad_char
    _read_keypad_char->_read_keypad_pins
    _malloc->___simple_search_fl
    _boot->_boot_led_blink

Critical Paths under _main in BANK0

    _main_menu->_settings
    _settings->_LCD_Write_String
    _concatenate->_malloc
    _LCD_Write_String->_concatenate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6044
                               _boot
                          _main_menu
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            0     0      0    6044
                   _LCD_Write_String
                        _read_keypad
                           _settings
                              _sleep
                              _start
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0     296
                           _MakeCall
                   _blink_sensor_led
                    _sensor_leds_off
 ---------------------------------------------------------------------------------
 (3) _sensor_leds_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _blink_sensor_led                                     5     3      2     200
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _MakeCall                                             0     0      0      96
                       _BlinkMainLED
                     __SIM900A_print
 ---------------------------------------------------------------------------------
 (4) __SIM900A_print                                       1     1      0      96
                                              1 COMMON     1     1      0
                     __SIM900A_putch
 ---------------------------------------------------------------------------------
 (5) __SIM900A_putch                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BlinkMainLED                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _settings                                             3     3      0    4224
                                             26 BANK0      3     3      0
                   _LCD_Write_String
                        _concatenate
                        _read_keypad
                   _read_saved_phone
                         _save_phone
 ---------------------------------------------------------------------------------
 (3) _save_phone                                           2     0      2      89
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _read_saved_phone                                     2     1      1      22
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _read_keypad                                          6     4      2     700
                                              8 COMMON     6     4      2
                   _read_keypad_char
 ---------------------------------------------------------------------------------
 (4) _read_keypad_char                                     1     1      0      97
                                              7 COMMON     1     1      0
                   _read_keypad_pins
 ---------------------------------------------------------------------------------
 (5) _read_keypad_pins                                     7     7      0      52
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (3) _concatenate                                          8     7      1    2543
                                             14 BANK0      8     7      1
                             _malloc
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     162
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               7     4      3     429
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (4) _malloc                                              14    12      2    1672
                                              0 BANK0     14    12      2
                      ___expand_heap
                 ___simple_search_fl
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___simple_search_fl                                  14    12      2     915
                                              0 COMMON    14    12      2
 ---------------------------------------------------------------------------------
 (5) ___expand_heap                                        5     5      0     171
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     4     2      2     824
                                             22 BANK0      4     2      2
                     _LCD_write_char
                        _concatenate (ARG)
 ---------------------------------------------------------------------------------
 (4) _LCD_write_char                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
                     _boot_led_blink
                        _init_trisio
                 _initialize_SIM900A
 ---------------------------------------------------------------------------------
 (2) _initialize_SIM900A                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_trisio                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _boot_led_blink                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
     _boot_led_blink
     _init_trisio
     _initialize_SIM900A
   _main_menu
     _LCD_Write_String
       _LCD_write_char
       _concatenate (ARG)
         _malloc
           ___expand_heap
           ___simple_search_fl
           _strlen (ARG)
         _strcpy
         _strlen
     _read_keypad
       _read_keypad_char
         _read_keypad_pins
     _settings
       _LCD_Write_String
       _concatenate
       _read_keypad
       _read_saved_phone
       _save_phone
     _sleep
     _start
       _MakeCall
         _BlinkMainLED
         __SIM900A_print
           __SIM900A_putch
       _blink_sensor_led
       _sensor_leds_off

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      48      12        0.0%
ABS                  0      0      48       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Oct 04 04:03:12 2024

         __end_of_read_keypad_char 0276                                  pc 0002  
         __end_of_read_keypad_pins 0590                                 l31 058F  
                               l23 053A                                 l32 055E  
                               l24 0557                                 l25 0543  
                               l34 0567                                 l27 054C  
                               l36 0570                                 l45 0269  
                               l47 0275                                 l56 0391  
                               l74 03F2                                 l89 02C9  
           __end_of__SIM900A_print 0346             __end_of__SIM900A_putch 025D  
                               fsr 0004                                l101 0280  
                              l230 030B                                l143 02DD  
                              l136 04DC                                l152 0268  
                              l233 0254                                l146 0245  
                              l171 0240                                l139 0530  
                              l155 0392                                l180 0644  
                              l236 025C                                l156 03A7  
                              l149 02F3                                l165 024C  
                              l174 023D                                l255 0345  
                              l168 0252                                l186 024B  
                              l194 043E                                l197 0292  
                              l820 06C8                                l812 0655  
                              l816 06FE                                l913 0254  
                              l834 0454                                l818 06D0  
                              l915 025A                                l853 076D  
                              l845 07E0                                l839 048B  
                              l873 0368                                l879 0326  
                              _RB0 0030                                _RB1 0031  
                              _RB2 0032                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _RD1 0041                                _RB6 0036  
                              _RB7 0037                                _RC5 003D  
                              _RD3 0043                                _RC7 003F  
                              _RD5 0045                                u110 025A  
                              u111 0259                                u410 0252  
                              u411 0251                                u600 0574  
                              u601 0573                                u610 057D  
                              u530 0537                                u611 057C  
                              u531 0536                                u700 077E  
                              u540 053E                                u701 077D  
                              u541 053D                                u710 079C  
                              u630 0709                                u550 0547  
                              u711 079B                                u631 0708  
                              u551 0546                                u720 07D6  
                              u640 0720                                u800 065E  
                              u560 0550                                u721 07D5  
                              u641 071F                                u801 065D  
                              u625 0580                                u561 054F  
                              u730 0450                                u650 0725  
                              u810 0672                                u570 055B  
                              u731 044F                                u651 0724  
                              u811 0671                                u571 055A  
                              u740 045D                                u660 074B  
                              u820 068D                                u580 0562  
                              u900 0398                                u741 045C  
                              u661 074A                                u645 071C  
                              u821 068C                                u581 0561  
                              u901 0397                                u750 0472  
                              u670 0750                                u830 069F  
                              u590 056B                                u910 03AB  
                              u751 0471                                u671 074F  
                              u831 069E                                u591 056A  
                              u911 03AA                                u760 047C  
                              u680 0768                                u840 06B9  
                              u920 05AA                                u761 047B  
                              u681 0767                                u665 0747  
                              u841 06B8                                u921 05A9  
                              u690 0779                                u850 06C4  
                              u770 0274                                u930 05D3  
                              u691 0778                                u851 06C3  
                              u835 069B                                u771 0273  
                              u931 05D2                                u860 0368  
                              u780 0320                                u940 05F5  
                              u765 0478                                u685 0764  
                              u861 0367                                u781 031F  
                              u941 05F4                                u790 064F  
                              u950 060B                                u870 0345  
                              u855 06C0                                u791 064E  
                              u951 060A                                u871 0344  
                              u880 0370                                u960 062F  
                              u881 036F                                u961 062E  
                              _RX9 00C6                                u890 03F2  
                              u970 040D                                u891 03F1  
                              u971 040C                                u980 0423  
                              u981 0422                                u990 0439  
                              u991 0438                                _TX9 04C6  
                 _blink_sensor_led 02CA               __end_of_BlinkMainLED 0531  
                              fsr0 0004                                indf 0000  
              LCD_Write_String@Str 0036                               l1101 052D  
                             l1223 0246                               l1231 02FA  
                             l1225 024A                               l1241 0305  
                             l1233 02FB                               l1401 07CE  
                             l1321 0537                               l1171 02E2  
                             l1243 0308                               l1235 02FC  
                             l1227 02F4                               l1403 07D6  
                             l1323 053E                               l1091 04E0  
                             l1155 0241                               l1173 02EF  
                             l1237 02FF                               l1229 02F8  
                             l1253 0283                               l1421 045D  
                             l1405 07D9                               l1333 055B  
                             l1325 0547                               l1093 04ED  
                             l1175 02F2                               l1239 0302  
                             l1431 0480                               l1423 0461  
                             l1415 0440                               l1407 07DE  
                             l1351 06FF                               l1511 06E2  
                             l1503 06BA                               l1335 0562  
                             l1327 0550                               l1319 0531  
                             l1095 04FD                               l1169 02DE  
                             l1425 0469                               l1417 0448  
                             l1361 070E                               l1353 0702  
                             l1513 06E8                               l1505 06C4  
                             l1521 0346                               l1337 056B  
                             l1345 0578                               l1329 0555  
                             l1441 026F                               l1601 059B  
                             l1097 050D                               l1089 04DD  
                             l1451 02B7                               l1435 0483  
                             l1427 0472                               l1419 0450  
                             l1363 0720                               l1355 0709  
                             l1515 06EC                               l1507 06D4  
                             l1523 034A                               l1347 057D  
                             l1339 0574                               l1443 0274  
                             l1611 05DF                               l1603 05AA  
                             l1187 024C                               l1099 051D  
                             l1531 0339                               l1453 02BB  
                             l1429 047C                               l1381 0769  
                             l1365 0725                               l1373 073A  
                             l1509 06D8                               l1517 06FA  
                             l1461 0310                               l1533 0369  
                             l1621 0601                               l1605 05B5  
                             l1525 0328                               l1455 02BC  
                             l1551 03C6                               l1391 079C  
                             l1383 076F                               l1375 074B  
                             l1367 0730                               l1359 070B  
                             l1471 0649                               l1463 0314  
                             l1439 0269                               l1535 0370  
                             l1543 0382                               l1631 062F  
                             l1623 060B                               l1607 05C4  
                             l1615 05EB                               l1527 0329  
                             l1457 02C6                               l1553 03D8  
                             l1393 07B3                               l1377 0750  
                             l1369 0737                               l1385 0774  
                             l1481 0676                               l1473 064F  
                             l1465 0320                               l1545 038D  
                             l1537 037B                               l1617 05F5  
                             l1609 05D3                               l1529 0335  
                             l1641 0423                               l1633 03F3  
                             l1555 03E0                               l1395 07BA  
                             l1387 0779                               l1491 068D  
                             l1475 065E                               l1459 030D  
                             l1627 0617                               l1563 02CA  
                             l1643 0429                               l1635 03FE  
                             l1549 03C1                               l1397 07C7  
                             l1389 077E                               l1493 069F  
                             l1485 0679                               l1477 0663  
                             l1469 0645                               l1557 048F  
                             l1581 023E                               l1629 061F  
                             l1565 02CA                               l1645 0439  
                             l1637 040D                               l1399 07CC  
                             l1495 06A7                               l1487 0679  
                             l1479 0672                               l1559 04D6  
                             l1567 02CD                               l1591 03A1  
                             l1639 0413                               l1647 0276  
                             l1497 06B3                               l1489 0687  
                             l1585 023C                               l1577 025D  
                             l1569 02DA                               l1593 03AB  
                             l1649 027B                               l1579 0263  
                             l1595 03B0                               l1597 03BA  
                             l1589 0398                               l1599 0590  
                             STR_1 00C5                               STR_2 0013  
                             STR_3 00D6                               STR_4 0070  
                             STR_5 00B2                               STR_6 00F7  
                             STR_7 0089                               STR_8 00D5  
                             STR_9 00E7                               _BRGH 04C2  
                             _CREN 00C4                               u1007 02D3  
                             u1017 04E6                               u1027 04F6  
                             u1037 0506                               u1047 0516  
                             u1057 0526                               u1067 02C1  
                             u1077 02E8                               _RCIF 0065  
                             _OERR 00C1                               _SPEN 00C7  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4                    ?_boot_led_blink 0070  
                ?_LCD_Write_String 0036                               _brkp 0051  
                             _boot 0283                               _main 0276  
                             btemp 007E                               start 0000  
               ??_LCD_Write_String 007E                      concatenate@s1 0033  
                    concatenate@s2 002E                  ??_sensor_leds_off 0070  
         __end_of_read_saved_phone 023E                    ?__SIM900A_print 0070  
                  ?__SIM900A_putch 0070                              ?_boot 0070  
                            ?_main 0070                              STR_10 009E  
                            STR_11 0046                      settings@phone 003A  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTB 0006                              _TRISB 0086  
                            _TRISD 0088                              _TXREG 0019  
                     ?_init_trisio 0070                       ?_read_keypad 0078  
                            _errno 0057                              _sleep 024C  
                            _start 0392                              pclath 000A  
                 ___expand_heap@pn 0070                              status 0003  
                            wtemp0 007E                   __end_of_MakeCall 0269  
                  __initialization 07E1                       __end_of_boot 0293  
                     __end_of_main 0283                      ___expand_heap 043F  
                concatenate@result 0034              read_saved_phone@phone 0071  
                           ??_boot 0073                             ??_main 007E  
                           ?_sleep 0070                             ?_start 0070  
                           _TRISC6 043E                             _TRISC7 043F  
                   ?___expand_heap 0070            ___simple_search_fl@best 007D  
          ___simple_search_fl@last 007A            ___simple_search_fl@next 007B  
                           _malloc 0645                             _strcpy 0346  
                           _strlen 030C                   __end_of_settings 0645  
          __end_of__initialization 07FC           __end_of_blink_sensor_led 02DE  
                       ___freelist 0059                       _BlinkMainLED 04DD  
                   __pcstackCOMMON 0070                 __SIM900A_print@ptr 0071  
                     __pidataBANK0 0293                  ?_read_keypad_char 0070  
                  save_phone@phone 0070                  ?_read_keypad_pins 0070  
                    __end_of_sleep 0253                      __end_of_start 03C1  
               ??_read_keypad_char 0077                 ??_read_keypad_pins 0070  
           blink_sensor_led@sensor 0070                   ??_boot_led_blink 0070  
             settings@saved_number 003C                          ?_MakeCall 0070  
       __end_of___simple_search_fl 07E1                            ??_sleep 0070  
                          ??_start 0075                         __pbssBANK0 004D  
                  _sensor_leds_off 0241                         _characters 003D  
                  ??___expand_heap 0070                   ??__SIM900A_print 0071  
                 ??__SIM900A_putch 0070                         __pmaintext 0276  
                          ?_malloc 0020                  ?_read_saved_phone 0070  
                          ?_strcpy 0070                            ?_strlen 0070  
               ??_read_saved_phone 0071                         ??_MakeCall 0073  
                       __stringtab 0003                  read_keypad@buffer 007C  
             ___simple_search_fl@c 007C               ___simple_search_fl@n 0070  
       __end_of_initialize_SIM900A 030C                          ?_settings 0070  
                   _LCD_write_char 02B6           ___simple_search_fl@split 0079  
                __end_of_main_menu 043F                            __ptext1 03F3  
                          __ptext2 0392                            __ptext3 0241  
                          __ptext4 02CA                            __ptext5 025D  
                          __ptext6 0327                            __ptext7 0253  
                          __ptext8 04DD                            __ptext9 024C  
                 LCD_write_char@ch 0072            __end_of_sensor_leds_off 0246  
             end_of_initialization 07FC                            malloc@m 0024  
                          malloc@n 0020                            malloc@p 002A  
           ___expand_heap@new_brkp 0073                         _save_phone 023E  
           __end_of_LCD_write_char 02CA                         ??_settings 007E  
                          strcpy@d 0075                            strlen@a 0072  
                          strlen@s 0073                  LCD_Write_String@i 0038  
                    ??_concatenate 002F                  ?_blink_sensor_led 0070  
                  ?_LCD_write_char 0070                 ??_blink_sensor_led 0072  
                 _LCD_Write_String 03C1                     __end_of_malloc 06FF  
                  ___expand_heap@n 0071                     __end_of_strcpy 0369  
                   __end_of_strlen 0327                start_initialization 07E1  
                       malloc@lock 004D                         malloc@size 0028  
                 ?_sensor_leds_off 0070                        ?_save_phone 0070  
               ___simple_search_fl 06FF       ___simple_search_fl@best_last 0078  
                       init_fetch0 02A3                __end_of_concatenate 04DD  
                      __pdataBANK0 003D                           ??_malloc 0022  
              ?___simple_search_fl 0070                           ??_strcpy 0073  
                         ??_strlen 0072                          ___heap_hi 0170  
                        ___heap_lo 0110                          ___latbits 0002  
                    __pcstackBANK0 0020                      ??_init_trisio 0070  
                    ??_read_keypad 007A                  __SIM900A_putch@bt 0070  
             ??___simple_search_fl 0072                read_keypad_pins@COL 0075  
              read_keypad_pins@ROW 0073              __end_of___expand_heap 048C  
                        __pstrings 0003                          _main_menu 03F3  
               _initialize_SIM900A 02F4                ?_initialize_SIM900A 0070  
              __end_of_init_trisio 024C                __end_of_read_keypad 0392  
                      _concatenate 048C               ??_initialize_SIM900A 0070  
                      __stringbase 0012                         ?_main_menu 0070  
                 _read_keypad_char 0269                           _MakeCall 025D  
                 _read_keypad_pins 0531           __end_of_LCD_Write_String 03F3  
                        malloc@end 0053                          malloc@cur 0055  
                        malloc@new 002C                   ??_LCD_write_char 0070  
                    ?_BlinkMainLED 0070                 read_keypad_char@ch 0077  
               __end_of__stringtab 0013                        _init_trisio 0246  
                      _read_keypad 0369                           __ptext10 0590  
                         __ptext11 023E                           __ptext20 06FF  
                         __ptext12 023C                           __ptext21 043F  
                         __ptext13 0369                           __ptext22 03C1  
                         __ptext14 0269                           __ptext23 02B6  
                         __ptext15 0531                           __ptext24 0283  
                         __ptext16 048C                           __ptext25 02F4  
                         __ptext17 030C                           __ptext26 0246  
                         __ptext18 0346                           __ptext27 02DE  
                         __ptext19 0645                   _read_saved_phone 023C  
                  read_keypad@mode 0078                         strcpy@dest 0070  
                     ??_save_phone 0072                     ??_BlinkMainLED 0070  
                         _settings 0590                           malloc@sz 0026  
                      ??_main_menu 007E                 __end_of_save_phone 0241  
___simple_search_fl@remaining_size 0076                           init_ram0 02A7  
                   _boot_led_blink 02DE                          strcpy@src 0072  
                        stringcode 000D                     __SIM900A_print 0327  
                   __SIM900A_putch 0253                           stringdir 000D  
                         stringtab 0003             __end_of_boot_led_blink 02F4  
                     ?_concatenate 002E  
